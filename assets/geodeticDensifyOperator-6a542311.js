import{_ as y,dU as f}from"./index-f00bd99f.js";import{i as g,a as v,u as P,c as S,s as T}from"./operatorGeodeticDensify-9cc58550.js";import{e as p}from"./geodeticCurveType-07cde097.js";let n,a,s,u,l;function _(){return!!n&&T()}async function b(){if(!_()){const[e]=await Promise.all([y(()=>import("./apiConverter-8290ff52.js"),["assets/apiConverter-8290ff52.js","assets/Point2D-e62ad2de.js","assets/Envelope2D-4833fda6.js","assets/ProjectionTransformation-a3dffea2.js","assets/Transformation2D-ab2ac5ee.js","assets/SimpleGeometryCursor-e3941f41.js","assets/index-f00bd99f.js","assets/index-a5714ce2.css","assets/OperatorDefinitions-181ceaf8.js","assets/jsonConverter-77f04cbc.js"]),g()]);n=e.fromGeometry,a=e.fromSpatialReference,s=e.getSpatialReference,u=e.toGeometry,l=v()}}function j(e,t,i={}){const{curveType:c="geodesic",unit:r}=i;r&&(t=f(t,r,"meters"));const o=s(e);return u(P(n(e),t,a(o),p[c]),o)}function x(e,t,i={}){const{curveType:c="geodesic",unit:r}=i;r&&(t=f(t,r,"meters"));const o=e.map(n),m=s(e);return S(o,t,a(m),p[c]).map(d=>u(d,m))}const E=Object.freeze(Object.defineProperty({__proto__:null,execute:j,executeMany:x,isLoaded:_,load:b,get supportsCurves(){return l}},Symbol.toStringTag,{value:"Module"}));export{x as d,_ as f,E as g,b as l,l as m,j as y};
