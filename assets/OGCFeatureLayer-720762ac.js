import{r as t,m as o,a as $,aa as L,dQ as N,bW as b,f as g,fL as z,p as v,ff as U,ds as H,dr as J,fg as V,fh as Z,da as k,fe as W,fi as K,fj as X,de as Y,dc as ee,dd as te,db as re,df as se,fk as R,fm as oe,ap as x,fl as ie,dw as pe,d4 as ne,z as ae,d5 as I,fr as ue,fs as le,fq as de,dh as ce,fu as ye,fv as fe,fw as he,fx as me,fy as ge,fM as ve,di as Se,fA as Ce,dp as we}from"./index-f00bd99f.js";import{R as be,x as F,C as O,q as Re,P as xe,O as Ie,N as Fe,v as Oe,k as $e}from"./ogcFeatureUtils-bedc2480.js";import{s as De}from"./capabilities-88479111.js";import"./featureConversionUtils-f7ab006d.js";import"./OptimizedFeature-a0a9dac6.js";import"./memoryEstimations-368c31a0.js";import"./OptimizedFeatureSet-5dc8ee29.js";import"./geojson-98445ab0.js";import"./date-bf306b67.js";import"./clientSideDefaults-c074d183.js";import"./QueryEngineCapabilities-4b2bc619.js";import"./sourceUtils-04396c3a.js";let d=class extends L{constructor(){super(...arguments),this.featureDefinition=null,this.type="ogc-feature"}load(e){return this.addResolvingPromise(this._loadOGCServices(this.layer,e)),this.when()}getSource(){const{featureDefinition:{collection:e,layerDefinition:r,spatialReference:i,supportedCrs:p},layer:{apiKey:u,customParameters:a,effectiveMaxRecordCount:n}}=this;return{type:"ogc-source",collection:e,layerDefinition:r,maxRecordCount:n,queryParameters:{apiKey:u,customParameters:a},spatialReference:i,supportedCrs:p}}queryExtent(e,r={}){return null}queryFeatureCount(e,r={}){return null}queryFeatures(e,r={}){return this.queryFeaturesJSON(e,r).then(i=>N.fromJSON(i))}queryFeaturesJSON(e,r={}){const i=this.getSource();return this.load(r).then(()=>be(i,e,r))}queryObjectIds(e,r={}){return null}serviceSupportsSpatialReference(e){return!(!e.isWGS84&&!e.isWebMercator)||!!this.featureDefinition.supportedCrs[e.wkid]}_conformsToType(e,r){const i=new RegExp(`^${b(r)}$`,"i");return e.conformsTo.some(p=>i.test(p))??!1}_getCapabilities(e,r){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryBins:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:r,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,standardMaxRecordCount:void 0,supportsCacheHint:!1,supportsCentroid:!1,supportsCurrentUser:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPaginationOnAggregatedQueries:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,supportsSqlExpression:!1,supportsTrueCurve:!1,tileMaxRecordCount:void 0},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},queryAttributeBins:De,editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUploadWithItemId:!1,supportsUpdateWithoutM:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}_getMaxRecordCount(e){const r=e?.components?.parameters;return r?.limit?.schema?.maximum??r?.limitFeatures?.schema?.maximum}_getStorageSpatialReference(e){const r=e.storageCrs??F,i=O(r);return i==null?g.WGS84:new g({wkid:i})}_getSupportedSpatialReferences(e,r){const i="#/crs",p=e.crs??[F],u=p.includes(i)?p.filter(n=>n!==i).concat(r.crs??[]):p,a=/^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;return u.filter(n=>!a.test(n))}async _loadOGCServices(e,r){const i=r!=null?r.signal:null,{apiKey:p,collectionId:u,customParameters:a,fields:n,geometryType:D,hasZ:T,objectIdField:j,timeInfo:q,url:P}=e,A={fields:n?.map(l=>l.toJSON()),geometryType:z.toJSON(D),hasZ:T??!1,objectIdField:j,timeInfo:q?.toJSON()},c={apiKey:p,customParameters:a,signal:i},f=await Re(P,c),[S,C]=await Promise.all([xe(f,c),Ie(f,c)]);if(!this._conformsToType(S,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))throw new v("ogc-feature-layer:no-geojson-support","Server does not support geojson");const y=C.collections.find(({id:l})=>l===u);if(!y)throw new v("ogc-feature-layer:collection-not-found","Server does not contain the named collection");const _=this._conformsToType(S,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30")?await Fe(f,c):null,w=await Oe(y,A,c),E=this._getMaxRecordCount(_),Q=this._getCapabilities(w.hasZ,E),B=this._getStorageSpatialReference(y).toJSON(),G=this._getSupportedSpatialReferences(y,C),M=new RegExp(`^${b($e)}`,"i"),h={};for(const l of G){const m=O(l);m!=null&&(h[m]||(h[m]=l.replace(M,"")))}this.featureDefinition={capabilities:Q,collection:y,layerDefinition:w,spatialReference:B,supportedCrs:h}}};t([o()],d.prototype,"featureDefinition",void 0),t([o({constructOnly:!0})],d.prototype,"layer",void 0),t([o()],d.prototype,"type",void 0),d=t([$("esri.layers.graphics.sources.OGCFeatureSource")],d);const Te=Ce();let s=class extends U(H(J(V(Z(k(W(K(X(Y(ee(te(re(se(we)))))))))))))){constructor(e){super(e),this.capabilities=null,this.collectionId=null,this.copyright=null,this.description=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelingInfo=null,this.labelsVisible=!0,this.legendEnabled=!0,this.maxRecordCount=null,this.objectIdField=null,this.operationalLayerType="OGCFeatureLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new d({layer:this}),this.spatialReference=null,this.title=null,this.type="ogc-feature",this.typeIdField=null,this.types=null,this.url=null}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["OGCFeatureServer"]},e).then(()=>this._fetchService(e))),this.when()}get defaultPopupTemplate(){return this.createPopupTemplate()}get effectiveMaxRecordCount(){return this.maxRecordCount??this.capabilities?.query.maxRecordCount??5e3}get isTable(){return this.loaded&&this.geometryType==null}set renderer(e){R(e,this.fieldsIndex),this._set("renderer",e)}on(e,r){return super.on(e,r)}createPopupTemplate(e){return oe(this,e)}createQuery(){return new x}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,r){let i,p=!1;const u=r?.feature?.attributes,a=this.typeIdField&&u?.[this.typeIdField];return a!=null&&this.types&&(p=this.types.some(n=>n.id==a&&(i=n.domains?.[e],i?.type==="inherited"&&(i=this._getLayerDomain(e)),!0))),p||i||(i=this._getLayerDomain(e)),i}queryFeatures(e,r){return this.load().then(()=>this.source.queryFeatures(x.from(e)||this.createQuery(),r)).then(i=>(i?.features?.forEach(p=>{p.layer=p.sourceLayer=this}),i))}async queryAttributeBins(e,r){throw new v("OGCFeatureLayer","Layer source does not support queryAttributeBins capability")}serviceSupportsSpatialReference(e){return this.source?.serviceSupportsSpatialReference(e)??!1}async _fetchService(e){await this.source.load(e),this.read(this.source.featureDefinition,{origin:"service"}),R(this.renderer,this.fieldsIndex),ie(this.timeInfo,this.fieldsIndex)}_getLayerDomain(e){if(!this.fields)return null;for(const r of this.fields)if(r.name===e&&r.domain)return r.domain;return null}};t([o({readOnly:!0,json:{origins:{service:{read:!0}}}})],s.prototype,"capabilities",void 0),t([o({type:String,json:{write:!0}})],s.prototype,"collectionId",void 0),t([o({type:String})],s.prototype,"copyright",void 0),t([o({readOnly:!0})],s.prototype,"defaultPopupTemplate",null),t([o({readOnly:!0,type:String,json:{origins:{service:{name:"collection.description"}}}})],s.prototype,"description",void 0),t([o({type:String})],s.prototype,"displayField",void 0),t([o({type:Number})],s.prototype,"effectiveMaxRecordCount",null),t([o(pe)],s.prototype,"elevationInfo",void 0),t([o({type:[ne],json:{origins:{service:{name:"layerDefinition.fields"}}}})],s.prototype,"fields",void 0),t([o(Te.fieldsIndex)],s.prototype,"fieldsIndex",void 0),t([o({readOnly:!0,type:ae,json:{origins:{service:{name:"layerDefinition.extent"}}}})],s.prototype,"fullExtent",void 0),t([o({type:I.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:I.read}}}}})],s.prototype,"geometryType",void 0),t([o({type:Boolean,json:{origins:{service:{name:"layerDefinition.hasZ"}}}})],s.prototype,"hasZ",void 0),t([o({type:Boolean,readOnly:!0})],s.prototype,"isTable",null),t([o({type:[ue],json:{origins:{"web-document":{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:le},write:!0}}}})],s.prototype,"labelingInfo",void 0),t([o(de)],s.prototype,"labelsVisible",void 0),t([o(ce)],s.prototype,"legendEnabled",void 0),t([o({type:Number})],s.prototype,"maxRecordCount",void 0),t([o({type:String,json:{origins:{service:{name:"layerDefinition.objectIdField"}}}})],s.prototype,"objectIdField",void 0),t([o({type:["OGCFeatureLayer"]})],s.prototype,"operationalLayerType",void 0),t([o(ye)],s.prototype,"popupEnabled",void 0),t([o({type:fe,json:{name:"popupInfo",write:!0}})],s.prototype,"popupTemplate",void 0),t([o({types:he,json:{origins:{service:{name:"layerDefinition.drawingInfo.renderer",write:!1},"web-scene":{types:me,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:!0}})],s.prototype,"renderer",null),t([o(ge)],s.prototype,"screenSizePerspectiveEnabled",void 0),t([o({readOnly:!0})],s.prototype,"source",void 0),t([o({readOnly:!0,type:g,json:{origins:{service:{read:!0}}}})],s.prototype,"spatialReference",void 0),t([o({type:String,json:{write:{enabled:!0,ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"collection.title"}}}})],s.prototype,"title",void 0),t([o({readOnly:!0,json:{read:!1}})],s.prototype,"type",void 0),t([o({type:String,readOnly:!0})],s.prototype,"typeIdField",void 0),t([o({type:[ve]})],s.prototype,"types",void 0),t([o(Se)],s.prototype,"url",void 0),s=t([$("esri.layers.OGCFeatureLayer")],s);const ze=s;export{ze as default};
