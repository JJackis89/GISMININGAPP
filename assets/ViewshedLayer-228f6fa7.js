import{l as T,bd as C,hg as H,r as i,m as s,M as J,dP as G,hh as x,hi as I,a as _,aM as A,gL as U,ac as D,fI as L,gM as Y,hj as k,z as B,x as K,ea as j,cV as F,dc as Q,df as W,d as X,dp as Z}from"./index-8ee34b61.js";import{c as ee,b as te}from"./featureReferenceUtils-8facebe6.js";import{l as ie}from"./Analysis-7212548c.js";import"./vec32-37618b70.js";import"./sphere-2ec54985.js";import"./mat3-848c9a5e.js";import"./mat3f64-d34bdb1e.js";import"./vectorStacks-f3f45332.js";import"./mat4f64-a3dc1405.js";import"./quatf64-216ddd5a.js";import"./vec2f64-44b9a02c.js";import"./IntersectorType-fff45762.js";let o=class extends T.JSONSupportMixin(C){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}get valid(){return this.observer!=null&&this.farDistance>0}equals(e){return H(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&ee(this.feature,e.feature)}};i([s({type:J,json:{write:{isRequired:!0}}})],o.prototype,"observer",void 0),i([s({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],o.prototype,"farDistance",void 0),i([s({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),G(e=>x.normalize(I(e),void 0,!0))],o.prototype,"heading",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],o.prototype,"tilt",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],o.prototype,"horizontalFieldOfView",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],o.prototype,"verticalFieldOfView",void 0),i([s(te)],o.prototype,"feature",void 0),i([s({readOnly:!0,json:{read:!1}})],o.prototype,"valid",null),o=i([_("esri.analysis.Viewshed")],o);const N=A.ofType(o);let a=class extends ie{constructor(t){super(t),this.type="viewshed",this._extent=null}initialize(){this.addHandles(D(()=>this._computeExtent(),t=>{t.pending==null&&(this._extent=t.extent)},L))}get viewsheds(){return this._get("viewsheds")||new N}set viewsheds(t){this._set("viewsheds",Y(t,this.viewsheds,N))}get spatialReference(){for(const t of this.viewsheds)if(t.observer!=null)return t.observer.spatialReference;return null}get extent(){return this._extent}get valid(){return this.viewsheds.every(t=>t.valid)}async waitComputeExtent(){const t=this._computeExtent();t.pending!=null&&await t.pending}_computeExtent(){const{spatialReference:t}=this;if(t==null)return{pending:null,extent:null};const u=this.viewsheds.filter(r=>r.observer!=null),d=u.map(r=>r.observer).toArray(),p=k(d,t);return p.pending!=null?{pending:p.pending,extent:null}:{pending:null,extent:p.geometries.map((r,h)=>{const b=u.at(h);return r!=null&&b!=null?this._computeViewshedExtent(this.viewsheds.at(h),r):null}).filter(r=>r!=null).reduce((r,h)=>se(r,h),null)}}_computeViewshedExtent(t,u){const{farDistance:d,heading:p,tilt:r,horizontalFieldOfView:h,verticalFieldOfView:b}=t,{spatialReference:M}=u,O=h/2,V=b/2,z=d/M.metersPerUnit,P=[x.normalize(p-O),p,x.normalize(p+O)],c=B.fromPoint(u),f=m=>{const y=P.map(l=>x.normalize(l-m));if(y[0]>y[2]||h===360)return z;const w=y.map(l=>Math.abs(l>180?360-l:l)).reduce((l,g)=>l>g?g:l);return w>90?0:z*Math.cos(j(w))};c.xmax+=f(90),c.xmin-=f(-90),c.ymax+=f(0),c.ymin-=f(180);const v=u.z;if(v!=null){let m=v,y=v;const w=r-90,l=F(w+V,-90,90),g=F(w-V,-90,90),R=M?.isGeographic?d:z;m+=R*$(l),y+=R*$(g);const S=E(V)*R,q=$(w)*S*(1-E(O));r<90&&(m-=q),r>90&&(y-=q),c.zmax=Math.max(m,v),c.zmin=Math.min(y,v)}return c}equals(t){return this===t||super.equals(t)&&K(this.viewsheds.toArray(),t.viewsheds.toArray(),(u,d)=>u.equals(d))}clear(){this.viewsheds.removeAll()}};function se(e,t){return e==null?t:t==null?e:e.union(t)}function E(e){return Math.cos(j(e))}function $(e){return Math.sin(j(e))}i([s({type:["viewshed"]})],a.prototype,"type",void 0),i([s({cast:U,type:N,nonNullable:!0})],a.prototype,"viewsheds",null),i([s({readOnly:!0})],a.prototype,"spatialReference",null),i([s()],a.prototype,"_extent",void 0),i([s()],a.prototype,"extent",null),i([s({readOnly:!0})],a.prototype,"valid",null),a=i([_("esri.analysis.ViewshedAnalysis")],a);let n=class extends Q(W(Z)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new a,this.opacity=1}initialize(){this.addHandles(D(()=>this.source,(e,t)=>{t!=null&&t.parent===this&&(t.parent=null),e!=null&&(e.parent=this)},L))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new a)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,t,u,d){t.viewsheds=e.filter(p=>p.valid).toJSON(d)}};i([s({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),i([s({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),i([s({type:a,nonNullable:!0})],n.prototype,"source",void 0),i([s({readOnly:!0})],n.prototype,"spatialReference",null),i([s({readOnly:!0})],n.prototype,"fullExtent",null),i([s({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),i([s({type:["show","hide"]})],n.prototype,"listMode",void 0),i([s({type:A.ofType(o),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),i([X("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=i([_("esri.layers.ViewshedLayer")],n);const me=n;export{me as default};
