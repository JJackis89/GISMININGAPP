import{l as q}from"./ClassBreaksDefinition-2050dd64.js";import{am as C}from"./index-f00bd99f.js";const w=()=>C.getLogger("esri.rest.support.generateRendererUtils");function v(n,e){return Number(n.toFixed(e))}function E(n,e){const{normalizationTotal:t}=n;return{classBreaks:B(n,e),normalizationTotal:t}}function B(n,e){const t=n.definition,{classificationMethod:l,normalizationType:a,definedInterval:m}=t,s=t.breakCount??1,u=[];let r=n.values;if(r.length===0)return[];r=r.sort((c,o)=>c-o);const[h,d]=e??[r.at(0),r.at(-1)];if(l==="equal-interval")if(r.length>=s){const c=(d-h)/s;let o=h;for(let i=1;i<s;i++){const f=v(h+i*c,6);u.push({minValue:o,maxValue:f,label:b(o,f,a)}),o=f}u.push({minValue:o,maxValue:d,label:b(o,d,a)})}else r.forEach(c=>{u.push({minValue:c,maxValue:c,label:b(c,c,a)})});else if(l==="natural-breaks"){const c=O(r),o=n.valueFrequency||c.valueFrequency,i=U(c.uniqueValues,o,s);let f=h;for(let p=1;p<s;p++)if(c.uniqueValues.length>p){const V=v(c.uniqueValues[i[p]],6);u.push({minValue:f,maxValue:V,label:b(f,V,a)}),f=V}u.push({minValue:f,maxValue:d,label:b(f,d,a)})}else if(l==="quantile")if(r.length>=s&&h!==d){let c=h,o=Math.ceil(r.length/s),i=0;for(let f=1;f<s;f++){let p=o+i-1;p>r.length&&(p=r.length-1),p<0&&(p=0),u.push({minValue:c,maxValue:r[p],label:b(c,r[p],a)}),c=r[p],i+=o,o=Math.ceil((r.length-i)/(s-f))}u.push({minValue:c,maxValue:d,label:b(c,d,a)})}else{let c=-1;for(let o=0;o<r.length;o++){const i=r[o];i!==c&&(c=i,u.push({minValue:c,maxValue:i,label:b(c,i,a)}),c=i)}}else if(l==="standard-deviation"){const c=G(r),o=A(r,c);if(o===0)u.push({minValue:r[0],maxValue:r[0],label:b(r[0],r[0],a)});else{const i=L(h,d,s,c,o)*o;let f=0,p=h;for(let g=s;g>=1;g--){const M=v(c-(g-.5)*i,6);u.push({minValue:p,maxValue:M,label:b(p,M,a)}),p=M,f++}let V=v(c+.5*i,6);u.push({minValue:p,maxValue:V,label:b(p,V,a)}),p=V,f++;for(let g=1;g<=s;g++)V=f===2*s?d:v(c+(g+.5)*i,6),u.push({minValue:p,maxValue:V,label:b(p,V,a)}),p=V,f++}}else if(l==="defined-interval"){if(!m)return u;const[c,o]=e??[r.at(0),r.at(-1)],i=Math.ceil((o-c)/m);let f=c;for(let p=1;p<i;p++){const V=v(c+p*m,6);u.push({minValue:f,maxValue:V,label:b(f,V,a)}),f=V}u.push({minValue:f,maxValue:o,label:b(f,o,a)})}return u}function b(n,e,t){let l=null;return l=n===e?t&&t==="percent-of-total"?n+"%":n.toString():t&&t==="percent-of-total"?n+"% - "+e+"%":n+" - "+e,l}function O(n){const e=[],t=[];let l=Number.MIN_VALUE,a=1,m=-1;for(let s=0;s<n.length;s++){const u=n[s];u===l?(a++,t[m]=a):u!==null&&(e.push(u),l=u,a=1,t.push(a),m++)}return{uniqueValues:e,valueFrequency:t}}function U(n,e,t){const l=n.length,a=[];t>l&&(t=l);for(let s=0;s<t;s++)a.push(Math.round(s*l/t-1));a.push(l-1);let m=S(a,n,e,t);return P(m.mean,m.sdcm,a,n,e,t)&&(m=S(a,n,e,t)),a}function S(n,e,t,l){let a=[],m=[],s=[],u=0;const r=[],h=[];for(let i=0;i<l;i++){const f=x(i,n,e,t);r.push(f.sbMean),h.push(f.sbSdcm),u+=h[i]}let d,c=u,o=!0;for(;o||u<c;){o=!1,a=[];for(let i=0;i<l;i++)a.push(n[i]);for(let i=0;i<l;i++)for(let f=n[i]+1;f<=n[i+1];f++)if(d=e[f],i>0&&f!==n[i+1]&&Math.abs(d-r[i])>Math.abs(d-r[i-1]))n[i]=f;else if(i<l-1&&n[i]!==f-1&&Math.abs(d-r[i])>Math.abs(d-r[i+1])){n[i+1]=f-1;break}c=u,u=0,m=[],s=[];for(let i=0;i<l;i++){m.push(r[i]),s.push(h[i]);const f=x(i,n,e,t);r[i]=f.sbMean,h[i]=f.sbSdcm,u+=h[i]}}if(u>c){for(let i=0;i<l;i++)n[i]=a[i],r[i]=m[i],h[i]=s[i];u=c}return{mean:r,sdcm:h}}function P(n,e,t,l,a,m){let s=0,u=0,r=0,h=0,d=!0;for(let c=0;c<2&&d;c++){c===0&&(d=!1);for(let o=0;o<m-1;o++)for(;t[o+1]+1!==t[o+2];){t[o+1]=t[o+1]+1;const i=x(o,t,l,a);r=i.sbMean,s=i.sbSdcm;const f=x(o+1,t,l,a);if(h=f.sbMean,u=f.sbSdcm,!(s+u<e[o]+e[o+1])){t[o+1]=t[o+1]-1;break}e[o]=s,e[o+1]=u,n[o]=r,n[o+1]=h,d=!0}for(let o=m-1;o>0;o--)for(;t[o]!==t[o-1]+1;){t[o]=t[o]-1;const i=x(o-1,t,l,a);r=i.sbMean,s=i.sbSdcm;const f=x(o,t,l,a);if(h=f.sbMean,u=f.sbSdcm,!(s+u<e[o-1]+e[o])){t[o]=t[o]+1;break}e[o-1]=s,e[o]=u,n[o-1]=r,n[o]=h,d=!0}}return d}function L(n,e,t,l,a){let m=Math.max(l-n,e-l)/a/t;return m=m>=1?1:m>=.5?.5:.25,m}function G(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e/=n.length,e}function A(n,e){let t=0;for(let l=0;l<n.length;l++){const a=n[l];t+=(a-e)*(a-e)}return t/=n.length,Math.sqrt(t)}function x(n,e,t,l){let a=0,m=0;for(let r=e[n]+1;r<=e[n+1];r++){const h=l[r];a+=t[r]*h,m+=h}m<=0&&w().warn("Exception in Natural Breaks calculation");const s=a/m;let u=0;for(let r=e[n]+1;r<=e[n+1];r++)u+=l[r]*(t[r]-s)**2;return{sbMean:s,sbSdcm:u}}const _="<Null>",Y="equal-interval",j=1,Q=5,R=10,H=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,J=new Set(["esriFieldTypeDate","esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong","esriFieldTypeOID","esriFieldTypeBigInteger"]),K=new Set(["esriFieldTypeTimeOnly","esriFieldTypeDateOnly"]),W=["min","max","avg","stddev","count","sum","variance","nullcount","median"];function T(n){return n==null||typeof n=="string"&&!n?_:n}function X(n){const e=n.normalizationField!=null||n.normalizationType!=null,t=n.minValue!=null||n.maxValue!=null,l=!!n.sqlExpression&&n.supportsSQLExpression;return!e&&!t&&!l}function bn(n){const{outStatisticTypes:e}=n,t=n.returnDistinct?[...new Set(n.values)]:n.values,l=t.filter(s=>s!=null).sort(),a=l.length,m={count:a,min:l[0],max:l[a-1]};return n.supportsNullCount&&(m.nullcount=t.length-a),!n.percentileParams||e?.include?.length&&!e.include.includes("median")||e?.exclude?.length&&e.exclude.includes("median")||(m.median=N(t,n.percentileParams)),m}function Z(n){const{values:e,useSampleStdDev:t,supportsNullCount:l,outStatisticTypes:a}=n;let m=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY,u=null,r=null,h=null,d=null,c=0;const o=n.minValue==null?-1/0:n.minValue,i=n.maxValue==null?1/0:n.maxValue;for(const p of e)Number.isFinite(p)?p>=o&&p<=i&&(u=u===null?p:u+p,m=Math.min(m,p),s=Math.max(s,p),c++):typeof p=="string"&&c++;if(c&&u!=null){r=u/c;let p=0;for(const V of e)Number.isFinite(V)&&V>=o&&V<=i&&(p+=(V-r)**2);d=t?c>1?p/(c-1):0:c>0?p/c:0,h=Math.sqrt(d)}else m=null,s=null;const f={avg:r,count:c,max:s,min:m,stddev:h,sum:u,variance:d};return l&&(f.nullcount=e.length-c),!n.percentileParams||a?.include?.length&&!a.include.includes("median")||a?.exclude?.length&&a.exclude.includes("median")||(f.median=N(e,n.percentileParams)),f}function N(n,e){const{fieldType:t,value:l,orderBy:a,isDiscrete:m}=e,s=nn(t,a==="desc");if((n=[...n].filter(i=>i!=null).sort((i,f)=>s(i,f))).length===0)return null;if(l<=0)return n[0];if(l>=1)return n[n.length-1];const u=(n.length-1)*l,r=Math.floor(u),h=r+1,d=u%1,c=n[r],o=n[h];return h>=n.length||m||typeof c=="string"||typeof o=="string"?c:c*(1-d)+o*d}function nn(n,e){if(n){if(J.has(n))return D(e);if(K.has(n))return I(e,!1);if(n==="esriFieldTypeTimestampOffset")return ln(e);const s=I(e,!0);if(n==="esriFieldTypeString")return s;if(n==="esriFieldTypeGUID"||n==="esriFieldTypeGlobalID")return(u,r)=>s($(u),$(r))}const t=e?1:-1,l=D(e),a=I(e,!0),m=k(e);return(s,u)=>typeof s=="number"&&typeof u=="number"?l(s,u):typeof s=="string"&&typeof u=="string"?a(s,u):m(s,u)??t}const y=(n,e)=>n==null?e==null?0:1:e==null?-1:null,F=(n,e)=>n==null?e==null?0:-1:e==null?1:null;function k(n){return n?y:F}const en=(n,e)=>F(n,e)??(n===e?0:new Date(n).getTime()-new Date(e).getTime()),tn=(n,e)=>y(n,e)??(n===e?0:new Date(e).getTime()-new Date(n).getTime());function ln(n){return n?tn:en}const an=(n,e)=>F(n,e)??(n===e?0:n<e?-1:1),un=(n,e)=>y(n,e)??(n===e?0:n<e?1:-1);function I(n,e){if(!e)return n?un:an;const t=k(n);return n?(l,a)=>{const m=t(l,a);return m??((l=l.toUpperCase())>(a=a.toUpperCase())?-1:l<a?1:0)}:(l,a)=>{const m=t(l,a);return m??((l=l.toUpperCase())<(a=a.toUpperCase())?-1:l>a?1:0)}}const on=(n,e)=>y(n,e)??e-n,rn=(n,e)=>F(n,e)??n-e;function D(n){return n?on:rn}function $(n){return n.slice(24,36)+n.slice(19,23)+n.slice(16,18)+n.slice(14,16)+n.slice(11,13)+n.slice(9,11)+n.slice(6,8)+n.slice(4,6)+n.slice(2,4)+n.slice(0,2)}function gn(n,e,t){let l;for(l in n)e?.include?.length&&!e.include.includes(l)||e?.exclude?.length&&e.exclude.includes(l)?delete n[l]:W.includes(l)&&(Number.isFinite(n[l])||(n[l]=null));return t&&["avg","stddev","variance"].forEach(a=>{n[a]!=null&&(n[a]=Math.ceil(n[a]??0))}),n}function vn(n){const e={};for(let t of n)(t==null||typeof t=="string"&&t.trim()==="")&&(t=null),e[t]==null?e[t]={count:1,data:t}:e[t].count++;return{count:e}}function z(n){return n?.type!=="coded-value"?[]:n.codedValues.map(e=>e.code)}function xn(n,e,t,l){const a=n.count,m=[];if(t&&e){const s=[],u=z(e[0]);for(const r of u)if(e[1]){const h=z(e[1]);for(const d of h)if(e[2]){const c=z(e[2]);for(const o of c)s.push(`${T(r)}${l}${T(d)}${l}${T(o)}`)}else s.push(`${T(r)}${l}${T(d)}`)}else s.push(r);for(const r of s)a.hasOwnProperty(r)||(a[r]={data:r,count:0})}for(const s in a){const u=a[s];m.push({value:u.data,count:u.count,label:u.label})}return{uniqueValueInfos:m}}function Tn(n,e,t,l){let a=null;switch(e){case"log":n!==0&&(a=Math.log(n)*Math.LOG10E);break;case"percent-of-total":Number.isFinite(l)&&l!==0&&(a=n/l*100);break;case"field":Number.isFinite(t)&&t!==0&&(a=n/t);break;case"natural-log":n>0&&(a=Math.log(n));break;case"square-root":n>0&&(a=n**.5)}return a}function sn(n,e,t){const l=mn({field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numClasses||Q});return n=cn(n,e.minValue,e.maxValue),E({definition:l,values:n,normalizationTotal:e.normalizationTotal},t)}function cn(n,e,t){const l=e??-1/0,a=t??1/0;return n.filter(m=>Number.isFinite(m)&&m>=l&&m<=a)}function mn(n){const{breakCount:e,field:t,normalizationField:l,normalizationType:a}=n,m=n.classificationMethod||Y,s=m==="standard-deviation"?n.standardDeviationInterval||j:void 0,u=m==="defined-interval"?n.definedInterval:void 0;return new q({breakCount:e,classificationField:t,classificationMethod:m,normalizationField:a==="field"?l:void 0,normalizationType:a,standardDeviationInterval:s,definedInterval:u})}function yn(n,e){let t=n.classBreaks;const l=t.length,a=t[0]?.minValue,m=t[l-1]?.maxValue,s=e==="standard-deviation",u=H;return t=t.map(r=>{const h=r.label,d={minValue:r.minValue,maxValue:r.maxValue,label:h};if(s&&h){const c=h.match(u),o=c?.map(i=>+i.trim())??[];o.length===2?(d.minStdDev=o[0],d.maxStdDev=o[1],o[0]<0&&o[1]>0&&(d.hasAvg=!0)):o.length===1&&(h.includes("<")?(d.minStdDev=null,d.maxStdDev=o[0]):h.includes(">")&&(d.minStdDev=o[0],d.maxStdDev=null))}return d}),{minValue:a,maxValue:m,classBreakInfos:t,normalizationTotal:n.normalizationTotal}}function Fn(n,e){const t=fn(n,e);if(t.min==null&&t.max==null)return{bins:[],minValue:t.min,maxValue:t.max,normalizationTotal:e.normalizationTotal};const l=t.intervals,a=t.min??0,m=t.max??0,s=l.map((u,r)=>({minValue:l[r][0],maxValue:l[r][1],count:0}));for(const u of n)if(u!=null&&u>=a&&u<=m){const r=dn(l,u);r>-1&&s[r].count++}return{bins:s,minValue:a,maxValue:m,normalizationTotal:e.normalizationTotal}}function fn(n,e,t=!1){const{field:l,classificationMethod:a,standardDeviationInterval:m,definedInterval:s,normalizationType:u,normalizationField:r,normalizationTotal:h,minValue:d,maxValue:c}=e,o=e.numBins||R;let i=null,f=null,p=null;if((!a||a==="equal-interval")&&!u){if(d!=null&&c!=null)i=d,f=c;else{const V=Z({values:n,minValue:d,maxValue:c,useSampleStdDev:!u,supportsNullCount:X({normalizationType:u,normalizationField:r,minValue:d,maxValue:c})});i=V.min??null,f=V.max??null}p=pn(i??0,f??0,o)}else{const{classBreaks:V}=sn(n,{field:l,normalizationType:u,normalizationField:r,normalizationTotal:h,classificationMethod:a,standardDeviationInterval:m,definedInterval:s,minValue:d,maxValue:c,numClasses:o},d!=null&&c!=null?[d,c]:void 0);i=V[0]?.minValue,f=V[V.length-1]?.maxValue,p=V.map(g=>[g.minValue,g.maxValue])}if(t&&p.length){const V=p.at(-1)[1];p.push([V,V])}return{min:i,max:f,intervals:p}}function dn(n,e){let t=-1;for(let l=n.length-1;l>=0;l--)if(e>=n[l][0]){t=l;break}return t}function pn(n,e,t){const l=(e-n)/t,a=[];let m,s=n;for(let u=1;u<=t;u++)m=s+l,m=Number(m.toFixed(16)),a.push([s,u===t?e:m]),s=m;return a}export{xn as $,Tn as B,gn as C,sn as E,fn as G,dn as L,yn as P,Fn as U,X as d,bn as f,nn as g,vn as k,T as m,Z as p,N as v};
