import{x as k,y as K,_ as L,A as m,L as V,B as g,D as z,E as j,p as y,F as f,G as u,I as H}from"./index-f00bd99f.js";import{i as w}from"./originUtils-5a133ae6.js";import{P as q,w as O,$ as Q,d as W,v as X,p as x,f as Z,I as N,m as S}from"./utils-951de3c1.js";import{n as ee,l as ae}from"./fetchService-05f74a69.js";import"./saveUtils-b2e823e3.js";const T="Feature Service",v="feature-layer-utils",te=`${v}-save`,re=`${v}-save-as`,p=`${v}-saveall`,d=`${v}-saveall-as`;function I(e){return{isValid:z(e)&&(!("dynamicDataSource"in e)||!e.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function b(e,a){const t=j(e,"portal-item");return a?.isTable&&(t.layerContainerType="tables"),t}function R(e){const a=b(e),t=b(e);return t.layerContainerType="tables",{forLayers:a,forTables:t}}function D(e){const a=[],t=[];for(const{layer:r,layerJSON:o}of e)ne(r)?t.push(o):a.push(o);return{layers:a,tables:t}}function ne(e,a){return e.isTable}function G(e){return D([e])}async function J(e,a){return/\/\d+\/?$/.test(e.url)?G(a[0]):U(a,e)}async function U(e,a){if(e.reverse(),!a)return D(e);const t=await se(a,e);for(const r of e)F(r.layer,r.layerJSON,t);return ie(t,e),t}async function se(e,a){let t=await e.fetchData("json");if(oe(t))return t;t||(t={}),le(t);const{layer:{url:r,customParameters:o,apiKey:n}}=a[0];return await ce(t,{url:r??"",customParameters:o,apiKey:n},a.map(s=>s.layer.layerId)),t}function oe(e){return!!(e&&Array.isArray(e.layers)&&Array.isArray(e.tables))}function le(e){e.layers||(e.layers=[]),e.tables||(e.tables=[])}function ie(e,a){const t=[],r=[];for(const{layer:o}of a){const{isTable:n,layerId:s}=o;n?r.push(s):t.push(s)}$(e.layers,t),$(e.tables,r)}function $(e,a){if(e.length<2)return;const t=[];for(const{id:r}of e)t.push(r);k(t.sort(E),a.slice().sort(E))&&e.sort((r,o)=>{const n=a.indexOf(r.id),s=a.indexOf(o.id);return n<s?-1:n>s?1:0})}function E(e,a){return e<a?-1:e>a?1:0}async function ce(e,a,t){const{url:r,customParameters:o,apiKey:n}=a,{serviceJSON:s,layersJSON:l}=await ee(r,{customParameters:o,apiKey:n}),i=_(e.layers,s.layers,t),c=_(e.tables,s.tables,t);e.layers=i.itemResources,e.tables=c.itemResources;const h=[...i.added,...c.added],B=l?[...l.layers,...l.tables]:[];await ue(e,h,r,B)}function _(e,a,t){const r=K(e,a,(n,s)=>n.id===s.id);e=e.filter(n=>!r.removed.some(s=>s.id===n.id));const o=r.added;return o.forEach(({id:n})=>{e.push({id:n})}),{itemResources:e,added:o.filter(({id:n})=>!t.includes(n))}}async function ue(e,a,t,r){const o=await ye(a),n=a.map(({id:s,type:l})=>new(o.get(l))({url:t,layerId:s,sourceJSON:r.find(({id:i})=>i===s)}));await Promise.allSettled(n.map(s=>s.load())),n.forEach(s=>{const{layerId:l,loaded:i,defaultPopupTemplate:c}=s;if(!i||c==null)return;const h={id:l,popupInfo:c.toJSON()};F(s,s.operationalLayerType==="ArcGISFeatureLayer"?h:{...h,layerType:s.operationalLayerType},e)})}async function ye(e){const a=[];e.forEach(({type:o})=>{switch(ae(o)){case"CatalogLayer":a.push(L(()=>import("./CatalogLayer-f75a3680.js"),["assets/CatalogLayer-f75a3680.js","assets/index-f00bd99f.js","assets/index-a5714ce2.css","assets/ReactiveMap-a4187365.js","assets/signal-f297c7bf.js","assets/utils-7142f869.js","assets/ClassBreaksDefinition-2050dd64.js","assets/FeatureLayerSource-832985fb.js","assets/MeshLocalVertexSpace-9667e66a.js","assets/meshVertexSpaceUtils-6c020a89.js","assets/vec32-6757f7c3.js","assets/External-19048fa7.js","assets/applyEditsUtils-fe2d17d5.js","assets/MeshTransform-feb21e78.js","assets/mat4f64-a3dc1405.js","assets/quat-b2e4eef3.js","assets/mat3f64-d34bdb1e.js","assets/quatf64-216ddd5a.js","assets/editingSupport-df46d8dc.js","assets/normalizeUtils-e6e5ded6.js","assets/normalizeUtilsCommon-3a54feae.js","assets/clientSideDefaults-c074d183.js","assets/QueryEngineCapabilities-4b2bc619.js","assets/QueryTask-69c0ac16.js","assets/executeQueryJSON-275db4a9.js","assets/query-451341fb.js","assets/pbfQueryUtils-e0baedd7.js","assets/pbf-b0db6978.js","assets/memoryEstimations-368c31a0.js","assets/OptimizedFeature-a0a9dac6.js","assets/OptimizedFeatureSet-5dc8ee29.js","assets/featureConversionUtils-f7ab006d.js"]).then(n=>n.default));break;case"FeatureLayer":a.push(L(()=>import("./index-f00bd99f.js").then(n=>n.m3),["assets/index-f00bd99f.js","assets/index-a5714ce2.css"]).then(n=>n.default));break;case"OrientedImageryLayer":a.push(L(()=>import("./OrientedImageryLayer-0fbe773c.js"),["assets/OrientedImageryLayer-0fbe773c.js","assets/index-f00bd99f.js","assets/index-a5714ce2.css"]).then(n=>n.default))}});const t=await Promise.all(a),r=new Map;return e.forEach(({type:o},n)=>{r.set(o,t[n])}),r}function F(e,a,t){e.isTable?A(t.tables,a):A(t.layers,a)}function A(e,a){const t=e.findIndex(({id:r})=>r===a.id);t===-1?e.push(a):e[t]=a}function C(e,a){if(!e.length)throw new y(`${a}:missing-parameters`,"'layers' array should contain at least one feature layer")}function fe(e,a){const t=e.map(r=>r.portalItem.id);if(new Set(t).size>1)throw new y(`${a}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function M(e,a){const t=e.map(r=>r.layerId);if(new Set(t).size!==t.length)throw new y(`${a}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function pe(e){C(e,p),await Promise.all(e.map(a=>a.load()));for(const a of e)x(a,p,I),Z({layer:a,itemType:T,errorNamePrefix:p});fe(e,p),M(e,p)}function de(e){if(!("layerType"in e))return!!e.charts?.length;switch(e.layerType){case"OrientedImageryLayer":return!!e.charts?.length;case"SubtypeGroupLayer":return!!e.layers.some(a=>!!a.charts?.length);case"SubtypeGroupTable":return!!e.tables.some(a=>!!a.charts?.length);case"CatalogLayer":return!!e.footprintLayer?.charts?.length}}function P(e,a){let t=0,r=0,o=0,n=0;for(const s of[...a.layers,...a.tables])if(de(s)&&n++,"layerType"in s)switch(s.layerType){case"OrientedImageryLayer":t++;break;case"SubtypeGroupLayer":r++;break;case"SubtypeGroupTable":o++}f(e,u.ORIENTED_IMAGERY_LAYER,t>0),f(e,u.SUBTYPE_GROUP_LAYER,r>0),f(e,u.SUBTYPE_GROUP_TABLE,o>0),f(e,u.CHARTS,n>0)}function Y(e,a,t){H(a,u.METADATA),f(a,u.MULTI_LAYER,e.length>1),f(a,u.SINGLE_LAYER,e.length===1),f(a,u.TABLE,t.tables.length>0&&t.layers.length===0),P(a,t)}async function me(e,a,t){P(a,t)}async function he(e,a,t){const{url:r,layerId:o,title:n,fullExtent:s,isTable:l}=e,i=m(r);a.url=(i?.serverType==="FeatureServer"?r:`${r}/${o}`)??null,a.title||(a.title=n),a.extent=null,l||s==null||(a.extent=await g(s)),Y([e],a,t)}function we(e,a){for(const n of e){const s=n.parsedUrl.path,l=m(s);if(!l?.url.path)throw new y(`${a}:invalid-parameters`,S(n,`has unsupported url pattern: ${s}`),{layer:n});const c=l?.serverType;if(c!=="FeatureServer"&&c!=="MapServer")throw new y(`${a}:invalid-parameters`,S(n,`has unsupported server type: ${c}`),{layer:n});if(c==="MapServer"&&e.length>1)throw new y(`${a}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=m(e[0].parsedUrl.path),r=t?.url.path;if(!e.every(n=>m(n.parsedUrl.path)?.url.path===r))throw new y(`${a}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function be(e){C(e,d),await Promise.all(e.map(a=>a.load()));for(const a of e)x(a,d,I);we(e,d),M(e,d)}function Te(e,a){P(e,a),N(e)}async function ve(e,a,t){let r=0;for(const{isTable:s}of e)s||r++;const o=e[0].parsedUrl.path,n=m(o);if(a.url=n?.serverType==="FeatureServer"?n.url.path:o,a.title||(a.title=n.title),a.extent=null,r>0){const s=e.map(l=>l.fullExtent).filter(V).reduce((l,i)=>l.clone().union(i));s&&(a.extent=await g(s))}Y(e,a,t),N(a)}async function Ee(e,a){return q({layer:e,itemType:T,validateLayer:I,createJSONContext:t=>b(t,e),createItemData:(t,r)=>J(r,[t]),errorNamePrefix:te,setItemProperties:me},a)}async function _e(e,a){await pe(e);const t=e[0].portalItem,r=R(t),o=await Promise.all(e.map(s=>O(s,s.isTable?r.forTables:r.forLayers,a))),n=await J(t,e.map((s,l)=>({layer:s,layerJSON:o[l]})));return Te(t,n),await t.update({data:n}),await Promise.all(e.slice(1).map(s=>s.portalItem.reload())),w(r.forLayers),w(r.forTables),t.clone()}async function Ae(e,a,t){return Q({layer:e,itemType:T,validateLayer:I,createJSONContext:r=>b(r,e),createItemData:(r,o)=>Promise.resolve(G(r)),errorNamePrefix:re,newItem:a,setItemProperties:he},t)}async function ge(e,a,t){await be(e);const r=W({itemType:T,errorNamePrefix:d,newItem:a}),o=R(r),n=await Promise.all(e.map(l=>O(l,l.isTable?o.forTables:o.forLayers,t))),s=await U(e.map((l,i)=>({layer:l,layerJSON:n[i]})));await ve(e,r,s),await X(r,s,t);for(const l of e)l.portalItem=r.clone();return w(o.forLayers),w(o.forTables),r}export{Ee as save,_e as saveAll,ge as saveAllAs,Ae as saveAs};
