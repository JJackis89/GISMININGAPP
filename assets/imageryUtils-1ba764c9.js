import{P as n,$ as p}from"./utils-951de3c1.js";import{t as c}from"./RasterJobHandlerMixin-837d9389.js";import{B as g,I as u,G as s,F as v}from"./index-f00bd99f.js";import"./originUtils-5a133ae6.js";import"./saveUtils-b2e823e3.js";import"./dataUtils-6e3ebbe4.js";import"./_commonjsHelpers-b09fa337.js";import"./colorUtils-8a0a0c74.js";import"./normalizeUtils-e6e5ded6.js";import"./normalizeUtilsCommon-3a54feae.js";import"./utils-b811360b.js";import"./ClassBreaksDefinition-2050dd64.js";const y="Image Service",f="imagery-layer-save",d="imagery-layer-save-as",I="imagery-tile-layer-save",T="imagery-tile-layer-save-as",m="WCS",w="wcs-layer-save",x="wcs-layer-save-as";function o(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:r}=e,a=c(r)[0];return{isValid:a?.datasetFormat==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function l(e){const r=e.layerJSON;return Promise.resolve(r&&Object.keys(r).length?r:null)}async function A(e,r){const{parsedUrl:a,title:t,fullExtent:i}=e;r.url=a.path,r.title||(r.title=t);try{r.extent=await g(i)}catch{r.extent=void 0}u(r,s.METADATA),v(r,s.TILED_IMAGERY,e.type==="imagery-tile")}async function G(e,r){const a=e.type==="imagery"?f:e.type==="imagery-tile"?I:w,t=e.type==="wcs"?m:y;return n({layer:e,itemType:t,validateLayer:o,createItemData:l,errorNamePrefix:a},r)}async function O(e,r,a){const t=e.type==="imagery"?d:e.type==="imagery-tile"?T:x,i=e.type==="wcs"?m:y;return p({layer:e,itemType:i,validateLayer:o,createItemData:l,errorNamePrefix:t,newItem:r,setItemProperties:A},a)}export{G as save,O as saveAs};
