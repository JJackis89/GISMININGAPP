import{H as m,dT as p,fW as l,g as f,dQ as j}from"./index-8ee34b61.js";import{t as R}from"./query-769e0ffd.js";import"./normalizeUtils-0f48385e.js";import"./normalizeUtilsCommon-676995ec.js";import"./pbfQueryUtils-926ff7f8.js";import"./pbf-7aa9e413.js";import"./memoryEstimations-95fc020c.js";import"./OptimizedFeature-eb8a9ca3.js";import"./OptimizedFeatureSet-5dc8ee29.js";function h(r,t){const e=r.toJSON();return e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.orderByFields&&(e.orderByFields=e.orderByFields.join(",")),e.outFields&&!t?.returnCountOnly?e.outFields.includes("*")?e.outFields="*":e.outFields=e.outFields.join(","):delete e.outFields,e.outSR&&(e.outSR=p(e.outSR)),e.dynamicDataSource&&(e.layer=JSON.stringify({source:e.dynamicDataSource}),delete e.dynamicDataSource),e}async function F(r,t,e){const n=await y(r,t,e),o=n.data,a=o.geometryType,s=o.spatialReference,c={};for(const u of o.relatedRecordGroups){const d={fields:void 0,geometryType:a,spatialReference:s,hasZ:!!o.hasZ,hasM:!!o.hasM,features:u.relatedRecords};if(u.objectId!=null)c[u.objectId]=d;else for(const i of Object.keys(u))i!=="relatedRecords"&&(c[u[i]]=d)}return{...n,data:c}}async function b(r,t,e){const n=await y(r,t,e,{returnCountOnly:!0}),o=n.data,a={};for(const s of o.relatedRecordGroups)s.objectId!=null&&(a[s.objectId]=s.count);return{...n,data:a}}async function y(r,t,e={},n){const o=R({...r.query,f:"json",...n,...h(t,n)});return m(r.path+"/queryRelatedRecords",{...e,query:{...e.query,...o}})}async function J(r,t,e){t=l.from(t);const n=f(r);return F(n,t,e).then(o=>{const a=o.data,s={};return Object.keys(a).forEach(c=>s[c]=j.fromJSON(a[c])),s})}async function N(r,t,e){t=l.from(t);const n=f(r);return b(n,t,{...e}).then(o=>o.data)}export{J as executeRelationshipQuery,N as executeRelationshipQueryForCount};
