import{_ as L,A as P,p as d,bx as I,by as g,bz as U,bA as O,a2 as v}from"./index-8ee34b61.js";import{s as T}from"./associatedFeatureServiceUtils-ebf5b5be.js";import{t as y,l as m,n as $}from"./fetchService-d6a5b823.js";import{a as C}from"./lazyLayerLoader-8a311d60.js";const F={FeatureLayer:!0,SceneLayer:!0,VideoLayer:!0};async function z(e){const{properties:t,url:r}=e,s={...t,url:r},l=await N(r,t?.customParameters),{Constructor:a,layerId:c,sourceJSON:u,parsedUrl:p,layers:o,tables:n}=l;if(o.length+n.length===0)return c!=null&&(s.layerId=c),u!=null&&(s.sourceJSON=u),new a(s);const i=new(await L(()=>import("./GroupLayer-1972bded.js"),["assets/GroupLayer-1972bded.js","assets/index-8ee34b61.js","assets/index-a5714ce2.css","assets/layersCreator-c67ff2dc.js","assets/loadUtils-4d61d962.js","assets/fetchService-d6a5b823.js","assets/associatedFeatureServiceUtils-ebf5b5be.js","assets/lazyLayerLoader-8a311d60.js","assets/portalLayers-787a3d5c.js","assets/saveUtils-f47506af.js"])).default({title:p.title});return await V(i,l,s),i}function S(e,t){return e?e.find(({id:r})=>r===t):null}function b(e,t,r,s,l){const a={...l,layerId:t};return e!=null&&(a.url=e),r!=null&&(a.sourceJSON=r),"sublayerTitleMode"in s.prototype&&(a.sublayerTitleMode="service-name"),new s(a)}async function V(e,t,r){const s=t.sublayerConstructorProvider;for(const{id:l,serverUrl:a}of t.layers){const c=S(t.sublayerInfos,l),u=b(a,l,c,(c&&s?.(c))??t.Constructor,r);e.add(u)}if(t.tables.length){const l=await w("FeatureLayer");t.tables.forEach(({id:a,serverUrl:c})=>{const u=b(c,a,S(t.tableInfos,a),l,r);e.tables.add(u)})}}async function N(e,t){let r=P(e);if(r==null&&(r=await J(e,t)),r==null)throw new d("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:s,sublayer:l}=r;let a;const c={FeatureServer:"FeatureLayer",KnowledgeGraphServer:"KnowledgeGraphLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer",VideoServer:"VideoLayer"},u=s==="FeatureServer",p=s==="SceneServer",o={parsedUrl:r,Constructor:null,layerId:u||p?l??void 0:void 0,layers:[],tables:[]};switch(s){case"MapServer":if(l!=null){const{type:n}=await y(e,{customParameters:t});switch(a="FeatureLayer",n){case"Catalog Layer":a="CatalogLayer";break;case"Catalog Dynamic Group Layer":throw new d("arcgis-layers:unsupported",`fromUrl() not supported for "${n}" layers`)}}else a=await x(e,t)?"TileLayer":"MapImageLayer";break;case"ImageServer":{const n=await y(e,{customParameters:t}),{tileInfo:i,cacheType:f}=n;a=i?i?.format?.toUpperCase()!=="LERC"||f&&f.toLowerCase()!=="elevation"?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const n=await y(r.url.path,{customParameters:t});if(a="SceneLayer",n){const i=n?.layers;if(n?.layerType==="Voxel")a="VoxelLayer";else if(i?.length){const f=i[0]?.layerType;f!=null&&v[f]!=null&&(a=v[f])}}break}case"3DTilesServer":throw new d("arcgis-layers:unsupported","fromUrl() not supported for 3DTiles layers");case"FeatureServer":if(a="FeatureLayer",l!=null){const n=await y(e,{customParameters:t});o.sourceJSON=n,o.preferredUrl=I(),a=m(n.type)}break;default:a=c[s]}if(F[a]&&l==null){const n=await _(e,s,t);if(u&&(o.preferredUrl=n.preferredUrl,o.sublayerInfos=n.layerInfos,o.tableInfos=n.tableInfos),n.layers.length+n.tables.length!==1)o.layers=n.layers,o.tables=n.tables,u&&n.layerInfos?.length&&(o.sublayerConstructorProvider=await E(n.layerInfos));else if(u||p){const i=n.layerInfos?.[0]??n.tableInfos?.[0];if(o.layerId=n.layers[0]?.id??n.tables[0]?.id,o.sourceJSON=i,u){const f=i?.type;a=m(f)}}}return o.Constructor=await w(a),o}async function J(e,t){const r=await y(e,{customParameters:t});let s=null,l=null;const a=r.type;if(a==="Feature Layer"||a==="Table"?(s="FeatureServer",l=r.id??null):a==="indexedVector"?s="VectorTileServer":r.hasOwnProperty("mapName")?s="MapServer":r.hasOwnProperty("bandCount")&&r.hasOwnProperty("pixelSizeX")?s="ImageServer":r.hasOwnProperty("maxRecordCount")&&r.hasOwnProperty("allowGeometryUpdates")?s="FeatureServer":r.hasOwnProperty("streamUrls")?s="StreamServer":h(r)?(s="SceneServer",l=r.id):r.hasOwnProperty("layers")&&h(r.layers?.[0])&&(s="SceneServer"),!s)return null;const c=l!=null?g(e):null;return{title:c!=null&&r.name||U(e),serverType:s,sublayer:l,url:{path:c!=null?c.serviceUrl:O(e).path}}}function h(e){return e!=null&&e.hasOwnProperty("store")&&e.hasOwnProperty("id")&&typeof e.id=="number"}async function _(e,t,r){let s,l,a,c=!1;switch(t){case"FeatureServer":{const o=await $(e,{customParameters:r});a=I(e,{preferredHost:o.preferredHost}),c=!!o.layersJSON,s=o.layersJSON||o.serviceJSON;break}case"SceneServer":{const o=await k(e,r);s=o.serviceInfo,l=o.tableServerUrl;break}default:s=await y(e,{customParameters:r})}const u=s?.layers,p=s?.tables;return{preferredUrl:a,layers:u?.map(o=>({id:o.id})).reverse()||[],tables:p?.map(o=>({serverUrl:l,id:o.id})).reverse()||[],layerInfos:c?u:[],tableInfos:c?p:[]}}async function k(e,t){const r=await y(e,{customParameters:t});if(!r.layers?.[0])return{serviceInfo:r};try{const{serverUrl:l}=await T(e),a=await y(l,{customParameters:t}).catch(()=>null);return a&&(r.tables=a.tables),{serviceInfo:r,tableServerUrl:l}}catch{return{serviceInfo:r}}}async function w(e){return(0,C[e])()}async function x(e,t){return(await y(e,{customParameters:t})).tileInfo}async function E(e){if(!e.length)return;const t=new Set,r=[];for(const{type:a}of e)t.has(a)||(t.add(a),r.push(w(m(a))));const s=await Promise.all(r),l=new Map;return Array.from(t).forEach((a,c)=>{l.set(a,s[c])}),a=>l.get(a.type)}export{z as fromUrl};
