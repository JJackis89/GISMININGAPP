import{r,m as a,Z as u,a as g,l as y,g as m,u as b,s as j,H as U}from"./index-f00bd99f.js";let n=class extends y{constructor(s){super(s),this.container=null,this.ranges=null}readContainer(s,e){return{sourceId:e.sourceId,globalId:e.globalId}}readRanges(s,e){return[...e.gaps.map(t=>({firstUnit:t.start,numUnits:t.end-t.start+1,isGap:!0})),...e.unitIdentifiers.map(t=>({firstUnit:t.firstUnit,numUnits:t.numUnits,isGap:!1,content:{sourceId:t.sourceId,globalId:t.globalId}}))]}};r([a({type:Object})],n.prototype,"container",void 0),r([u("container",["sourceId","globalId"])],n.prototype,"readContainer",null),r([a({type:[Object]})],n.prototype,"ranges",void 0),r([u("ranges",["gaps","unitIdentifiers"])],n.prototype,"readRanges",null),n=r([g("esri.rest.networks.unitIdentifiers.support.UnitQueryResult")],n);async function h(s,e,t){const o=m(s),i=e.toJSON();e.objects&&(i.objects=JSON.stringify(e.objects));const d={...i,f:"json"},p=b({...o.query,...d}),c=j(p,{...t,method:"post"}),l=`${o.path}/unitIdentifiers/query`,{data:f}=await U(l,c);return f.objects.map(I=>n.fromJSON(I))}export{h as queryUnitIdentifiers};
