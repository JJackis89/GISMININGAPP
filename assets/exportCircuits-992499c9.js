import{r as e,m as o,Z as y,a as f,l as v,e as x,g as h,u as j,s as E,H as O}from"./index-8ee34b61.js";import{t as S}from"./utils-53de6d71.js";import"./applyEditsUtils-6bf1024b.js";import"./MeshTransform-f54c0aff.js";import"./mat4f64-a3dc1405.js";import"./quat-3ef9ebee.js";import"./mat3f64-d34bdb1e.js";import"./quatf64-216ddd5a.js";import"./vec32-37618b70.js";import"./editingSupport-2c8a4f8f.js";import"./normalizeUtils-0f48385e.js";import"./normalizeUtilsCommon-676995ec.js";var s;let t=s=class extends v{static from(r){return x(s,r)}constructor(r){super(r),this.circuits=null,this.moment=null,this.exceededTransferLimit=!1,this.serviceEdits=null}readServiceEdits(r,i){return S(r)}};e([o({json:{type:[Object]}})],t.prototype,"circuits",void 0),e([o({type:Date})],t.prototype,"moment",void 0),e([o({type:Boolean,json:{type:Boolean,write:!0}})],t.prototype,"exceededTransferLimit",void 0),e([o({type:[Object]})],t.prototype,"serviceEdits",void 0),e([y("serviceEdits")],t.prototype,"readServiceEdits",null),t=s=e([f("esri.rest.networks.circuits.support.ExportCircuitsResult")],t);async function D(r,i,m){const p=h(r),c=i.toJSON();i.circuits&&(c.circuits=JSON.stringify(i.circuits));const n={...c,f:"json"},a=j({...p.query,...n}),u=E(a,{...m,method:"post"}),d=`${p.path}/circuits/export`,{data:l}=await O(d,u);return t.fromJSON(l)}export{D as exportCircuits};
