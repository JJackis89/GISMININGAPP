import{r as s,m as n,Z as b,z as te,dg as oe,fu as le,f as re,a as Q,hM as ne,hN as W,T as H,dx as u,V as K,H as M,A as z,bY as ue,df as ye,fd as pe,aa as de,p as h,g as ce,hO as he,cx as fe,hP as be,ad as me,fk as ge,eG as Se,am as O,hQ as j,bg as Ie,aM as U,dN as we,fH as V,fm as ve,ap as Ee,_ as Oe,aD as D,gr as xe,hR as Le,gO as Te,hS as Fe,d5 as N,gZ as Pe,d4 as De,hT as _e,eA as q,fr as Ae,d as E,gk as Ve,hU as Ce,fv as Re,hV as qe,fw as $e,fx as Me,hx as G,e as Z,dP as je,fM as Ne,dz as B,fD as Be,ac as X,cu as Y,dy as ee}from"./index-f00bd99f.js";import{S as ke}from"./QueryTask-69c0ac16.js";const ze=y=>{let t=class extends y{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,r){const i=r.capabilities&&r.capabilities.split(",").map(ae=>ae.toLowerCase().trim());if(!i)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const a=this.type,l=a!=="tile"&&!!r.supportsDynamicLayers,p=i.includes("query"),d=i.includes("map"),m=!!r.exportTilesAllowed,g=i.includes("tilemap"),S=i.includes("data"),w=a!=="tile"&&(!r.tileInfo||l),L=a!=="tile"&&(!r.tileInfo||l),T=a!=="tile",c=a!=="tile"&&l&&r.currentVersion>=11.1,f=r.cimVersion?ne.parse(r.cimVersion):null,F=f?.greaterEqual(1,4)??!1,P=f?.greaterEqual(2,0)??!1;return{operations:{supportsExportMap:d,supportsExportTiles:m,supportsIdentify:p,supportsQuery:S,supportsTileMap:g},exportMap:d?{supportsArcadeExpressionForLabeling:F,supportsCIMSymbols:P,supportsDynamicLayers:l,supportsSublayerOrderBy:c,supportsSublayerDefinitionExpression:L,supportsSublayerVisibility:w,supportsSublayersChanges:T}:null,exportTiles:m?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(e,r){let i=r.currentVersion;return i||(i=r.hasOwnProperty("capabilities")||r.hasOwnProperty("tables")?10:r.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),i}async fetchRelatedService(e){const r=this.portalItem;if(!r||!W(r))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=r.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then(a=>a.find(l=>l.type==="Feature Service")??null,()=>null));const i=await this._relatedFeatureServicePromise;return H(e),i?{itemId:i.id,url:i.url}:null}async fetchSublayerInfo(e,r){const{source:i}=e;if(this?.portalItem&&this.type==="tile"&&i?.type==="map-layer"&&W(this.portalItem)&&e.originIdOf("url")<u.SERVICE){const p=await this.fetchRelatedService(r);p&&(e.url=K(p.url,i.mapLayerId.toString()),e.layerItemId=p.itemId)}const{url:a}=e;let l;if(i.type==="data-layer")l=(await M(a,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...r})).data;else if(a&&e.originIdOf("url")>u.SERVICE)try{const p=await this._fetchAllLayersAndTablesFromService(a),d=z(a)?.sublayer??i.mapLayerId;l=p.get(d)}catch{}else{let p=e.id;i?.type==="map-layer"&&(p=i.mapLayerId);try{l=(await this.fetchAllLayersAndTables(r)).get(p)}catch{}}return l}async fetchAllLayersAndTables(e){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,e)}async _fetchAllLayersAndTablesFromService(e,r){await this.load(r),this._allLayersAndTablesMap||(this._allLayersAndTablesMap=new Map);const i=z(e),a=ue(this._allLayersAndTablesMap,i?.url.path,()=>M(K(i?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(p=>{const d=new Map,{layers:m,tables:g}=p.data,S=[...m??[],...g??[]];for(const w of S)d.set(w.id,w);return{result:d}},p=>({error:p}))),l=await a;if(H(r),"result"in l)return l.result;throw l.error}};return s([n({readOnly:!0})],t.prototype,"capabilities",void 0),s([b("service","capabilities",["capabilities","cimVersion","currentVersion","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],t.prototype,"readCapabilities",null),s([n({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),s([n({type:te})],t.prototype,"fullExtent",void 0),s([n(oe)],t.prototype,"id",void 0),s([n({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],t.prototype,"legendEnabled",void 0),s([n(le)],t.prototype,"popupEnabled",void 0),s([n({type:re})],t.prototype,"spatialReference",void 0),s([n({readOnly:!0})],t.prototype,"version",void 0),s([b("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],t.prototype,"readVersion",null),t=s([Q("esri.layers.mixins.ArcGISMapService")],t),t};var C;function $(y){return y?.type==="esriSMS"}function J(y,t,e){const r=e.minimumWritableOrigin||e.origin;return!!r&&y.originIdOf(t)>=B(r)}function x(y,t,e){const r=J(this,t,e);return{ignoreOrigin:!0,allowNull:r,enabled:!!e&&e.layer?.type==="map-image"&&(e.writeSublayerStructure||r)}}function k(y,t,e){return{enabled:!!e&&e.layer?.type==="tile"&&(J(this,t,e)||this._isOverridden(t))}}function I(y,t,e){return{ignoreOrigin:!0,enabled:e&&e.writeSublayerStructure||!1}}function R(y,t,e){return{ignoreOrigin:!0,enabled:!!e?.writeSublayerStructure&&this.originIdOf(t)>u.SERVICE}}function _(y,t,e){return{ignoreOrigin:!0,enabled:!!e&&(e.writeSublayerStructure||J(this,t,e))}}let Qe=0;const Ue=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);var v;let o=(v=class extends ye(pe.IdentifiableMixin(de)){constructor(t){super(t),this.attributeTableTemplate=null,this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(t){return this.addResolvingPromise((async()=>{const{layer:e,url:r}=this;if(!e&&!r)throw new h("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=e?await e.fetchSublayerInfo(this,t):(await M(r,{responseType:"json",query:{f:"json"},...t})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service",layer:e,url:ce(r)}))})()),this}readCapabilities(t,e){e=e.layerDefinition||e;const{attachment:r,operations:{supportsQuery:i,supportsQueryAttachments:a},query:{supportsFormatPBF:l,supportsOrderBy:p,supportsPagination:d},data:{supportsAttachment:m},queryRelated:g}=he(e,this.url);return{attachment:{supportsOrderByFields:r?.supportsOrderByFields??!1,supportsResize:r?.supportsResize??!1},exportMap:{supportsModification:!!e.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:a},data:{supportsAttachment:m},query:{supportsFormatPBF:l,supportsOrderBy:p,supportsPagination:d},queryRelated:g}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(t){this._setAndNotifyLayer("definitionExpression",t)}get effectiveScaleRange(){const{minScale:t,maxScale:e}=this;return{minScale:t,maxScale:e}}readMaxScaleRange(t,e){return{minScale:(e=e.layerDefinition||e).minScale??0,maxScale:e.maxScale??0}}get fieldsIndex(){return new fe(this.fields||[])}set floorInfo(t){this._setAndNotifyLayer("floorInfo",t)}readGlobalIdFieldFromService(t,e){if((e=e.layerDefinition||e).globalIdField)return e.globalIdField;if(e.fields){for(const r of e.fields)if(r.type==="esriFieldTypeGlobalID")return r.name}}get id(){return this._get("id")??Qe++}set id(t){this._get("id")!==t&&(this.layer?.capabilities?.exportMap?.supportsDynamicLayers!==!1?this._set("id",t):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(t,e){return e.type==="Table"}set labelingInfo(t){this._setAndNotifyLayer("labelingInfo",t)}writeLabelingInfo(t,e,r,i){t&&t.length&&(e.layerDefinition={drawingInfo:{labelingInfo:t.map(a=>a.write({},i))}})}set labelsVisible(t){this._setAndNotifyLayer("labelsVisible",t)}set layer(t){this._set("layer",t),this.sublayers?.forEach(e=>e.layer=t)}set listMode(t){this._set("listMode",t)}set minScale(t){this._setAndNotifyLayer("minScale",t)}readMinScale(t,e){return e.minScale||e.layerDefinition?.minScale||0}set maxScale(t){this._setAndNotifyLayer("maxScale",t)}readMaxScale(t,e){return e.maxScale||e.layerDefinition?.maxScale||0}readObjectIdFieldFromService(t,e){return(e=e.layerDefinition||e).objectIdField?e.objectIdField:e.fields?.find(i=>i.type==="esriFieldTypeOID")?.name}set opacity(t){this._setAndNotifyLayer("opacity",t)}readOpacity(t,e){const{layerDefinition:r}=e;return 1-.01*(r?.transparency??r?.drawingInfo?.transparency??0)}writeOpacity(t,e,r,i){e.layerDefinition={drawingInfo:{transparency:100-100*t}}}set orderBy(t){this._setAndNotifyLayer("orderBy",t)}writeParent(t,e){this.parent&&this.parent!==this.layer?e.parentLayerId=be(this.parent.id):e.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{capabilities:t,fieldsIndex:e,layer:r,url:i}=this,{spatialReference:a}=r,l="gdbVersion"in r?r.gdbVersion:void 0,p=me("featurelayer-pbf")&&t?.query.supportsFormatPBF;return new ke({fieldsIndex:e,gdbVersion:l,pbfSupported:p,queryAttachmentsSupported:t?.operations?.supportsQueryAttachments??!1,sourceSpatialReference:a,url:i})}set renderer(t){if(ge(t,this.fieldsIndex),t){for(const e of t.symbols)if(Se(e)){O.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",t)}get source(){return this._get("source")||new j({mapLayerId:this.id})}set source(t){this._setAndNotifyLayer("source",t)}set sublayers(t){this._handleSublayersChange(t,this._get("sublayers")),this._set("sublayers",t)}castSublayers(t){return Ie(U.ofType(C),t)}writeSublayers(t,e,r){this.sublayers?.length&&(e[r]=this.sublayers.map(i=>i.id).toArray().reverse())}readTitle(t,e){return e.layerDefinition?.name??e.name}readTypeIdField(t,e){let r=(e=e.layerDefinition||e).typeIdField;if(r&&e.fields){r=r.toLowerCase();const i=e.fields.find(a=>a.name.toLowerCase()===r);i&&(r=i.name)}return r}get url(){const t=this.layer?.parsedUrl??this._lastParsedUrl,e=this.source;if(!t)return null;if(this._lastParsedUrl=t,e?.type==="map-layer")return`${t.path}/${e.mapLayerId}`;const r={layer:JSON.stringify({source:this.source})};return`${t.path}/dynamicLayer?${we(r)}`}set url(t){this._overrideIfSome("url",t)}set visible(t){this._setAndNotifyLayer("visible",t)}writeVisible(t,e,r,i){e[r]=this.getAtOrigin("defaultVisibility","service")||t}clone(){const{store:t}=V(this),e=new C;return V(e).store=t.clone(Ue),this.commitProperty("url"),e._lastParsedUrl=this._lastParsedUrl,e}createPopupTemplate(t){return ve(this,t)}createQuery(){return new Ee({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const t=(await Oe(()=>import("./index-f00bd99f.js").then(a=>a.m3),["assets/index-f00bd99f.js","assets/index-a5714ce2.css"])).default,{layer:e,url:r}=this;let i;if(r&&this.originIdOf("url")>u.SERVICE)i=new t({url:r});else{if(!e?.parsedUrl)throw new h("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const a=e.parsedUrl;i=new t({url:a.path}),a&&this.source&&(this.source.type==="map-layer"?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source)}}return e?.refreshInterval!=null&&(i.refreshInterval=e.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.floorInfo&&(i.floorInfo=D(this.floorInfo)),this.originIdOf("labelingInfo")>u.SERVICE&&(i.labelingInfo=D(this.labelingInfo)),this.originIdOf("labelsVisible")>u.DEFAULTS&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>u.DEFAULTS&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>u.DEFAULTS&&(i.visible=this.visible),this.originIdOf("minScale")>u.DEFAULTS&&(i.minScale=this.minScale),this.originIdOf("maxScale")>u.DEFAULTS&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>u.DEFAULTS&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>u.DEFAULTS&&(i.popupTemplate=D(this.popupTemplate)),this.originIdOf("renderer")>u.SERVICE&&(i.renderer=D(this.renderer)),this.source?.type==="data-layer"&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>u.DEFAULTS&&(i.title=this.title),e?.type==="map-image"&&e.originIdOf("customParameters")>u.DEFAULTS&&(i.customParameters=e.customParameters),e?.type==="tile"&&e.originIdOf("customParameters")>u.DEFAULTS&&(i.customParameters=e.customParameters),i}getField(t){return this.fieldsIndex.get(t)}getFeatureType(t){return xe(this.types,this.typeIdField,t)}getFieldDomain(t,e){const r=e?.feature,i=this.getFeatureType(r);if(i){const a=i.domains&&i.domains[t];if(a&&a.type!=="inherited")return a}return this._getLayerDomain(t)}async queryAttachments(t,e){await this.load(),t=Le.from(t);const r=this.capabilities;if(!r?.data?.supportsAttachment)throw new h("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:a,globalIds:l,num:p,size:d,start:m,where:g}=t;if(!r?.operations?.supportsQueryAttachments&&(i?.length>0||l?.length>0||d?.length>0||p||m||g))throw new h("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",t);if(!(a?.length||l?.length||g))throw new h("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",t);return!r?.attachment?.supportsOrderByFields&&t.orderByFields?.length&&((t=t.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(t,e)}async queryFeatureCount(t=this.createQuery(),e){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryFeatureCount:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeForCount(t,{...e,query:{...this.layer?.customParameters,token:r}})}async queryFeatures(t=this.createQuery(),e){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryFeatures:not-supported","this layer has no url.");const r=await this.queryTask.execute(t,{...e,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(r?.features)for(const i of r.features)i.sourceLayer=this;return r}async queryObjectIds(t=this.createQuery(),e){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryObjectIds:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeForIds(t,{...e,query:{...this.layer?.customParameters,token:r}})}async queryRelatedFeatures(t,e){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryRelatedFeatures:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeRelationshipQuery(t,{...e,query:{...this.layer?.customParameters,token:r}})}async queryRelatedFeaturesCount(t,e){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new h("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new h("queryRelatedFeaturesCount:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeRelationshipQueryForCount(t,{...e,query:{...this.layer?.customParameters,token:r}})}toExportImageJSON(t){const e={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},r=Te(t,this.definitionExpression);r!=null&&(e.definitionExpression=r);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((l,p)=>(l[p]=this.originIdOf(p),l),{});if(Object.keys(i).some(l=>i[l]>u.SERVICE)){const l=e.drawingInfo={};if(i.renderer>u.SERVICE&&(l.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>u.SERVICE&&(l.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>u.SERVICE)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some(d=>!d.labelPlacement)&&O.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let p=this.labelingInfo;this.geometryType!=null&&(p=Fe(this.labelingInfo,N.toJSON(this.geometryType))),l.showLabels=!0,l.labelingInfo=p.filter(d=>d.labelPlacement).map(d=>d.toJSON({origin:"service",layer:this.layer}))}else l.showLabels=!1;i.opacity>u.SERVICE&&(l.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(l.renderer)}return(this.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1)&&this.originIdOf("orderBy")>u.SERVICE&&(e.orderBy=this.orderBy?.map(l=>l.toJSON())??null),e}_assignDefaultSymbolColors(t){this._forEachSimpleMarkerSymbols(t,e=>{e.color||e.style!=="esriSMSX"&&e.style!=="esriSMSCross"||(e.outline?.color?e.color=e.outline.color:e.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(t,e){if(t){const r=("uniqueValueInfos"in t?t.uniqueValueInfos:"classBreakInfos"in t?t.classBreakInfos:null)??[];for(const i of r)$(i.symbol)&&e(i.symbol);"symbol"in t&&$(t.symbol)&&e(t.symbol),"defaultSymbol"in t&&$(t.defaultSymbol)&&e(t.defaultSymbol)}}_setAndNotifyLayer(t,e){const r=this.layer,i=this._get(t);let a,l;switch(t){case"definitionExpression":case"floorInfo":a="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":a="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":a="supportsDynamicLayers",l="supportsModification";break;case"orderBy":a="supportsSublayerOrderBy",l="supportsModification"}const p=V(this).getDefaultOrigin();if(p!=="service"){if(a&&this.layer?.capabilities?.exportMap?.[a]===!1)return void this._logLockedError(t,`capability not available 'layer.capabilities.exportMap.${a}'`);if(l&&this.capabilities?.exportMap[l]===!1)return void this._logLockedError(t,`capability not available 'capabilities.exportMap.${l}'`)}t!=="source"||this.loadStatus==="not-loaded"?(this._set(t,e),p!=="service"&&i!==e&&r&&r.emit&&r.emit("sublayer-update",{propertyName:t,target:this})):this._logLockedError(t,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(t,e){e&&(e.forEach(r=>{r.parent=null,r.layer=null}),this.removeAllHandles()),t&&(t.forEach(r=>{r.parent=this,r.layer=this.layer}),this.addHandles([t.on("after-add",({item:r})=>{r.parent=this,r.layer=this.layer}),t.on("after-remove",({item:r})=>{r.parent=null,r.layer=null}),t.on("before-changes",r=>{(this.layer?.capabilities?.exportMap?.supportsSublayersChanges??1)||(O.getLogger(this).error(new h("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),r.preventDefault())})]))}_logLockedError(t,e){const{layer:r,declaredClass:i}=this;O.getLogger(i).error(new h("sublayer:locked",`Property '${String(t)}' can't be changed on Sublayer from the layer '${r?.id}'`,{reason:e,sublayer:this,layer:r}))}_getLayerDomain(t){return this.fieldsIndex.get(t)?.domain??null}},C=v,v.test={isMapImageLayerOverridePolicy:t=>t===R||t===I||t===x,isTileImageLayerOverridePolicy:t=>t===k},v);s([n({type:Pe,json:{name:"attributeTableInfo",write:{overridePolicy:x},origins:{"web-scene":{write:!1}}}})],o.prototype,"attributeTableTemplate",void 0),s([n({readOnly:!0})],o.prototype,"capabilities",void 0),s([b("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],o.prototype,"readCapabilities",null),s([n()],o.prototype,"defaultPopupTemplate",null),s([n({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:x}}})],o.prototype,"definitionExpression",null),s([n({readOnly:!0})],o.prototype,"effectiveScaleRange",null),s([b("service","maxScaleRange",["minScale","maxScale"])],o.prototype,"readMaxScaleRange",null),s([n({type:[De],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],o.prototype,"fields",void 0),s([n({readOnly:!0})],o.prototype,"fieldsIndex",null),s([n({type:_e,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:x},origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"floorInfo",null),s([n({type:te,json:{read:{source:"layerDefinition.extent"}}})],o.prototype,"fullExtent",void 0),s([n({type:N.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:N.read}}}}})],o.prototype,"geometryType",void 0),s([n({type:String})],o.prototype,"globalIdField",void 0),s([b("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],o.prototype,"readGlobalIdFieldFromService",null),s([n({type:q,json:{write:{ignoreOrigin:!0}}})],o.prototype,"id",null),s([n({readOnly:!0})],o.prototype,"isTable",void 0),s([b("service","isTable",["type"])],o.prototype,"readIsTable",null),s([n({value:null,type:[Ae],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:R}}})],o.prototype,"labelingInfo",null),s([E("labelingInfo")],o.prototype,"writeLabelingInfo",null),s([n({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:I}}})],o.prototype,"labelsVisible",null),s([n({value:null})],o.prototype,"layer",null),s([n({type:String,json:{write:{overridePolicy:k}}})],o.prototype,"layerItemId",void 0),s([n({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:_}}})],o.prototype,"legendEnabled",void 0),s([n({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],o.prototype,"listMode",null),s([n({type:Number,value:0,json:{write:{overridePolicy:I}}})],o.prototype,"minScale",null),s([b("minScale",["minScale","layerDefinition.minScale"])],o.prototype,"readMinScale",null),s([n({type:Number,value:0,json:{write:{overridePolicy:I}}})],o.prototype,"maxScale",null),s([b("maxScale",["maxScale","layerDefinition.maxScale"])],o.prototype,"readMaxScale",null),s([n()],o.prototype,"objectIdField",void 0),s([b("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],o.prototype,"readObjectIdFieldFromService",null),s([n({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:I}}})],o.prototype,"opacity",null),s([b("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],o.prototype,"readOpacity",null),s([E("opacity")],o.prototype,"writeOpacity",null),s([n({value:null,type:[Ve],json:{name:"layerDefinition.orderBy",read:{reader:Ce},write:{overridePolicy:x},origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"orderBy",null),s([n({json:{type:q,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:I}}})],o.prototype,"parent",void 0),s([E("parent")],o.prototype,"writeParent",null),s([n({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(y,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:_,writer(y,t,e){t[e]=!y}}}})],o.prototype,"popupEnabled",void 0),s([n({type:Re,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:_}}})],o.prototype,"popupTemplate",void 0),s([n({readOnly:!0})],o.prototype,"queryTask",null),s([n({type:[qe],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],o.prototype,"relationships",void 0),s([n({types:$e,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:R},origins:{"web-scene":{types:Me,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:R}}}}})],o.prototype,"renderer",null),s([n({types:{key:"type",base:null,typeMap:{"data-layer":G,"map-layer":j}},cast(y){if(y){if("mapLayerId"in y)return Z(j,y);if("dataSource"in y)return Z(G,y)}return y},json:{name:"layerDefinition.source",write:{overridePolicy:I}}})],o.prototype,"source",null),s([n()],o.prototype,"sourceJSON",void 0),s([n({type:re,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],o.prototype,"spatialReference",void 0),s([n({value:null,json:{type:[q],write:{target:"subLayerIds",allowNull:!0,overridePolicy:I}}})],o.prototype,"sublayers",null),s([je("sublayers")],o.prototype,"castSublayers",null),s([E("sublayers")],o.prototype,"writeSublayers",null),s([n({type:String,json:{name:"name",write:{overridePolicy:_}}})],o.prototype,"title",void 0),s([b("service","title",["name","layerDefinition.name"])],o.prototype,"readTitle",null),s([n({type:String})],o.prototype,"typeIdField",void 0),s([n({json:{read:!1},readOnly:!0,value:"sublayer"})],o.prototype,"type",void 0),s([b("typeIdField",["layerDefinition.typeIdField"])],o.prototype,"readTypeIdField",null),s([n({type:[Ne],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],o.prototype,"types",void 0),s([n({type:String,json:{name:"layerUrl",write:{overridePolicy:k}}})],o.prototype,"url",null),s([n({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:I}}})],o.prototype,"visible",null),s([E("visible")],o.prototype,"writeVisible",null),o=C=s([Q("esri.layers.support.Sublayer")],o);function Ge(y,t,e){return t.flatten(({sublayers:i})=>i).length!==y.length?!0:!!y.some(i=>i.originIdOf("minScale")>e||i.originIdOf("maxScale")>e||i.originIdOf("renderer")>e||i.originIdOf("labelingInfo")>e||i.originIdOf("opacity")>e||i.originIdOf("labelsVisible")>e||i.originIdOf("source")>e)||!ie(y,t)}function Ze(y,t,e){return!!y.some(r=>{const i=r.source,a=!i||i.type==="map-layer"&&i.mapLayerId===r.id&&(i.gdbVersion==null||i.gdbVersion===e);r.commitProperty("renderer"),r.commitProperty("labelingInfo"),r.commitProperty("opacity"),r.commitProperty("labelsVisible"),r.commitProperty("orderBy");const l=r.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1;return!a||r.originIdOf("renderer")>u.SERVICE||r.originIdOf("labelingInfo")>u.SERVICE||r.originIdOf("opacity")>u.SERVICE||r.originIdOf("labelsVisible")>u.SERVICE||l&&r.originIdOf("orderBy")>u.SERVICE})||!ie(y,t)}function ie(y,t){if(!y?.length||t==null)return!0;const e=t.slice().reverse().flatten(({sublayers:a})=>a&&a.toArray().reverse()).map(a=>a.id).toArray();if(y.length>e.length)return!1;let r=0;const i=e.length;for(const{id:a}of y){for(;r<i&&e[r]!==a;)r++;if(r>=i)return!1}return!0}function Je(y){return!!y&&y.some(t=>t.minScale!=null||t.layerDefinition?.minScale!=null)}function We(y,t){const e=[],r={};return y&&y.forEach(i=>{const a=new o;if(a.read(i,t),r[a.id]=a,i.parentLayerId!=null&&i.parentLayerId!==-1){const l=r[i.parentLayerId];l.sublayers||(l.sublayers=[]),l.sublayers.unshift(a)}else e.unshift(a)}),e}const A=U.ofType(o);function se(y,t){y&&y.forEach(e=>{t(e),e.sublayers&&e.sublayers.length&&se(e.sublayers,t)})}const Xe=y=>{let t=class extends y{constructor(...e){super(...e),this.allSublayers=new Be({getCollections:()=>[this.sublayers],getChildrenFunction:r=>r.sublayers}),this.sublayersSourceJSON={[u.SERVICE]:{},[u.PORTAL_ITEM]:{},[u.WEB_SCENE]:{},[u.WEB_MAP]:{},[u.LINK_CHART]:{}},this.subtables=null,this.addHandles([X(()=>this.sublayers,(r,i)=>this._handleSublayersChange(r,i),Y),X(()=>this.subtables,(r,i)=>this._handleSublayersChange(r,i),Y)])}destroy(){this.allSublayers.destroy()}readSublayers(e,r){if(!r||!e)return;const{sublayersSourceJSON:i}=this,a=B(r.origin);if(a<u.SERVICE||(i[a]={context:r,visibleLayers:e.visibleLayers||i[a].visibleLayers,layers:e.layers||i[a].layers},a>u.SERVICE))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:l,origin:p}=this.createSublayersForOrigin("web-document"),d=V(this);d.setDefaultOrigin(p),this._set("sublayers",new A(l)),d.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find(r=>r.id===e)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){let r;const i=B(e==="web-document"?"web-map":e);let a=u.SERVICE,l=this.sublayersSourceJSON[u.SERVICE].layers,p=this.sublayersSourceJSON[u.SERVICE].context,d=null;const m=[u.PORTAL_ITEM,u.WEB_SCENE,u.WEB_MAP].filter(c=>c<=i);for(const c of m){const f=this.sublayersSourceJSON[c];Je(f.layers)&&(a=c,l=f.layers,p=f.context,f.visibleLayers&&(d={visibleLayers:f.visibleLayers,context:f.context}))}const g=[u.PORTAL_ITEM,u.WEB_SCENE,u.WEB_MAP].filter(c=>c>a&&c<=i);let S=null;for(const c of g){const{layers:f,visibleLayers:F,context:P}=this.sublayersSourceJSON[c];f&&(S={layers:f,context:P},r??(r=c)),F&&(d={visibleLayers:F,context:P})}const w=We(l,p),L=new Map,T=new Set;if(S)for(const c of S.layers)L.set(c.id,c);if(d?.visibleLayers)for(const c of d.visibleLayers)T.add(c);return se(w,c=>{S&&c.read(L.get(c.id),S.context),d&&c.read({defaultVisibility:T.has(c.id)},d.context)}),{origin:ee(a),originWithPartialOverrides:r?ee(r):null,sublayers:new A({items:w})}}read(e,r){super.read(e,r),this.readSublayers(e,r)}_handleSublayersChange(e,r){r&&(r.forEach(i=>{i.parent=null,i.layer=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(i=>{i.parent=this,i.layer=this}),this.addHandles([e.on("after-add",({item:i})=>{i.parent=this,i.layer=this}),e.on("after-remove",({item:i})=>{i.parent=null,i.layer=null})],"sublayers-owner"),this.type==="tile"&&this.addHandles(e.on("before-changes",i=>{O.getLogger("esri.layers.TileLayer").error(new h("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),i.preventDefault()}),"sublayers-owner"))}};return s([n({readOnly:!0})],t.prototype,"allSublayers",void 0),s([n({readOnly:!0,type:U.ofType(o)})],t.prototype,"serviceSublayers",void 0),s([n({value:null,type:A,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],t.prototype,"sublayers",void 0),s([n({readOnly:!0})],t.prototype,"sublayersSourceJSON",void 0),s([n({type:A,json:{read:{source:"tables"}}})],t.prototype,"subtables",void 0),t=s([Q("esri.layers.mixins.SublayersOwner")],t),t};export{o as a,Ge as e,ze as f,Ze as i,Xe as m};
