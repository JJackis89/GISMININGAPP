import{dq as y,dc as h,dd as c,de as m,df as f,dr as v,ds as u,ct as g,dt as S,a6 as w,p as a,am as n,r as i,m as o,dv as _,Z as T,dw as I,a as L,dp as x,cu as $}from"./index-f00bd99f.js";import{R as b,V as d}from"./SceneService-a124623d.js";import{p as O,a as M,y as A,m as V}from"./I3SLayerDefinitions-e8865fd4.js";import{n as l}from"./SceneModifications-1bc2aa4b.js";import{$ as p,Z as D,w as E}from"./elevationInfoUtils-bb9adefd.js";import"./originUtils-5a133ae6.js";import"./resourceUtils-be95ebf3.js";import"./resourceUtils-15b5acad.js";import"./saveUtils-b2e823e3.js";let t=class extends b(y(h(c(m(f(v(u(x)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(g(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,$))}normalizeCtorArgs(e,s){return typeof e=="string"?{url:e,...s}:e}readModifications(e,s,r){this._modificationsSource={url:S(e,r),context:r}}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const s=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){w(r)}if(await this._fetchService(s),this._modificationsSource!=null){const r=await l.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,s)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,s){return this._debouncedSaveOperations(d.SAVE_AS,{...s,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(d.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new a("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(e){const s="Integrated mesh layers";p(n.getLogger(this),D(s,"absolute-height",e)),p(n.getLogger(this),E(s,e))}};i([o({type:String,readOnly:!0})],t.prototype,"geometryType",void 0),i([o({type:["show","hide"]})],t.prototype,"listMode",void 0),i([o({type:["IntegratedMeshLayer"]})],t.prototype,"operationalLayerType",void 0),i([o({json:{read:!1},readOnly:!0})],t.prototype,"type",void 0),i([o({type:O,readOnly:!0})],t.prototype,"nodePages",void 0),i([o({type:[M],readOnly:!0})],t.prototype,"materialDefinitions",void 0),i([o({type:[A],readOnly:!0})],t.prototype,"textureSetDefinitions",void 0),i([o({type:[V],readOnly:!0})],t.prototype,"geometryDefinitions",void 0),i([o({readOnly:!0})],t.prototype,"serviceUpdateTimeStamp",void 0),i([o({type:l,clonable:e=>e.clone()}),_({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],t.prototype,"modifications",void 0),i([T(["web-scene","portal-item"],"modifications")],t.prototype,"readModifications",null),i([o(I)],t.prototype,"elevationInfo",null),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),t=i([L("esri.layers.IntegratedMeshLayer")],t);const C=t;export{C as default};
