import{cx as O,p as b,cy as M,cA as Z,cz as $,bQ as C,cC as F,cw as Q,b3 as v}from"./index-f00bd99f.js";import{r as w,s as k,o as B}from"./featureConversionUtils-f7ab006d.js";import{t as P,n as G}from"./objectIdUtils-967fafff.js";import{u as L}from"./executeQueryForSnapping-b6c8d1c4.js";import{f as z}from"./FeatureStore-41b79be2.js";import{x as E,j as _}from"./FixedIntervalBinParameters-c92437fc.js";import{L as N}from"./QueryEngine-6723a34b.js";import{a as W,u as U,l as H}from"./clientSideDefaults-c074d183.js";import{E as J,p as I,d as j,f as T,h as D,S as V}from"./sourceUtils-04396c3a.js";import"./OptimizedFeature-a0a9dac6.js";import"./memoryEstimations-368c31a0.js";import"./OptimizedFeatureSet-5dc8ee29.js";import"./normalizeUtils-e6e5ded6.js";import"./normalizeUtilsCommon-3a54feae.js";import"./BoundsStore-8fb9ad0b.js";import"./PooledRBush-859ea7f2.js";import"./quickselect-b7b34c34.js";import"./optimizedFeatureQueryEngineAdapter-e87cd9e9.js";import"./json-48e3ea08.js";import"./WhereClauseCache-89a3b7dc.js";import"./WhereClause-6167c62b.js";import"./QueryEngineCapabilities-4b2bc619.js";import"./quantizationUtils-4020db87.js";import"./utils-9fa0ff83.js";import"./utils-2cad792c.js";import"./utils-7142f869.js";import"./ClassBreaksDefinition-2050dd64.js";import"./signal-f297c7bf.js";import"./date-bf306b67.js";const K=Q,X={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:Q},Y={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsQueryAttachmentOrderByFields:!1,supportsQueryBins:!0,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0,supportsQueryWithCacheHint:!0},queryBinsCapabilities:V};function ee(g){return v(g)?g.z!=null:!!g.hasZ}function te(g){return v(g)?g.m!=null:!!g.hasM}class Qe{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const i=[],{features:a}=e,n=this._inferLayerProperties(a,e.fields),o=e.fields||[],d=e.hasM!=null?e.hasM:!!n.hasM,c=e.hasZ!=null?e.hasZ:!!n.hasZ,u=!e.spatialReference&&!n.spatialReference,l=u?K:e.spatialReference||n.spatialReference,y=u?X:null,m=e.geometryType||n.geometryType,h=!m;let r=e.objectIdField||n.objectIdField,t=e.timeInfo;const p=new O(o);if(!h&&(u&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!m))throw new b("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!r)throw new b("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(n.objectIdField&&r!==n.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${r}" doesn't match the field name "${n.objectIdField}", found in the provided fields`}),r=n.objectIdField),r&&!n.objectIdField){const s=p.get(r);s?(r=s.name,s.type="esriFieldTypeOID",s.editable=!1,s.nullable=!1):o.unshift({alias:r,name:r,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const s of o){if(s.name==null&&(s.name=s.alias),s.alias==null&&(s.alias=s.name),!s.name)throw new b("feature-layer:invalid-field-name","field name is missing",{field:s});if(s.name===r&&(s.type="esriFieldTypeOID"),!M.jsonValues.includes(s.type))throw new b("feature-layer:invalid-field-type",`invalid type for field "${s.name}"`,{field:s});s.length==null&&(s.length=Z(s))}const f={};for(const s of o)if(s.type!=="esriFieldTypeOID"&&s.type!=="esriFieldTypeGlobalID"){const q=$(s);q!==void 0&&(f[s.name]=q)}if(t){if(t.startTimeField){const s=p.get(t.startTimeField);s?(t.startTimeField=s.name,s.type="esriFieldTypeDate"):t.startTimeField=null}if(t.endTimeField){const s=p.get(t.endTimeField);s?(t.endTimeField=s.name,s.type="esriFieldTypeDate"):t.endTimeField=null}if(t.trackIdField){const s=p.get(t.trackIdField);s?t.trackIdField=s.name:(t.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:t}}))}t.startTimeField||t.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:t}}),t=null)}const x=p.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??C}:null;this._createDefaultAttributes=W(f,r);const R={warnings:i,featureErrors:[],layerDefinition:{...Y,drawingInfo:U(m),templates:H(f),extent:y,geometryType:m,objectIdField:r,fields:o,hasZ:c,hasM:d,timeInfo:t,dateFieldsTimeReference:x},assignedObjectIds:{}},S={type:"object-id",fieldName:r};if(this._queryEngine=new N({fieldsIndex:O.fromLayerJSON({fields:o,timeInfo:t,dateFieldsTimeReference:x}),geometryType:m,hasM:d,hasZ:c,featureIdInfo:S,spatialReference:l,featureStore:new z({geometryType:m,hasM:d,hasZ:c}),timeInfo:t}),!a?.length)return this._nextObjectId=P,R;const A=G(r,a);return this._nextObjectId=A+1,await E(a,l),this._loadInitialFeatures(R,a)}async applyEdits(e){const{spatialReference:i,geometryType:a}=this._queryEngine;return await Promise.all([J(i,a),E(e.adds,i),E(e.updates,i)]),this._applyEdits(e)}queryFeatures(e,i={}){return this._queryEngine.executeQuery(e,i.signal)}queryFeatureCount(e,i={}){return this._queryEngine.executeQueryForCount(e,i.signal)}queryObjectIds(e,i={}){return this._queryEngine.executeQueryForIds(e,i.signal)}queryExtent(e,i={}){return this._queryEngine.executeQueryForExtent(e,i.signal)}querySnapping(e,i={}){return L(this._queryEngine,e,i.signal)}queryAttributeBins(e,i={}){return this._queryEngine.executeAttributeBinsQuery(e,i.signal)}_inferLayerProperties(e,i){let a,n,o=null,d=null,c=null;for(const u of e){const l=u.geometry;if(l!=null&&(o||(o=F(l)),d||(d=l.spatialReference),a==null&&(a=ee(l)),n==null&&(n=te(l)),o&&d&&a!=null&&n!=null))break}if(i&&i.length){let u=null;i.some(l=>{const y=l.type==="esriFieldTypeOID",m=!l.type&&l.name&&l.name.toLowerCase()==="objectid";return u=l,y||m})&&(c=u.name)}return{geometryType:o,spatialReference:d,objectIdField:c,hasM:n,hasZ:a}}async _loadInitialFeatures(e,i){const{geometryType:a,hasM:n,hasZ:o,objectIdField:d,spatialReference:c,featureStore:u,fieldsIndex:l}=this._queryEngine,y=[],m={type:"object-id",fieldName:d};for(const t of i){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&a!==F(t.geometry)){e.featureErrors.push(I("Incorrect geometry type."));continue}const p=this._createDefaultAttributes(),f=j(l,p,t.attributes,!0);f?e.featureErrors.push(f):(this._assignObjectId(p,t.attributes,!0),t.attributes=p,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[d]),t.geometry!=null&&(t.geometry=_(t.geometry,t.geometry.spatialReference,c)),y.push(t))}u.addMany(w([],y,a,o,n,m));const{fullExtent:h,timeExtent:r}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=h,r){const{start:t,end:p}=r;e.layerDefinition.timeInfo.timeExtent=[t,p]}return e}async _applyEdits(e){const{adds:i,updates:a,deletes:n}=e,o={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(i?.length&&this._applyAddEdits(o,i),a?.length&&this._applyUpdateEdits(o,a),n?.length){for(const u of n)o.deleteResults.push(T(u));this._queryEngine.featureStore.removeManyById(n)}const{fullExtent:d,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:d,timeExtent:c,featureEditResults:o}}_applyAddEdits(e,i){const{addResults:a}=e,{geometryType:n,hasM:o,hasZ:d,objectIdField:c,spatialReference:u,featureStore:l,featureIdInfo:y,fieldsIndex:m}=this._queryEngine,h=[];for(const r of i){if(r.geometry&&n!==F(r.geometry)){a.push(I("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),p=j(m,t,r.attributes);if(p)a.push(p);else{if(this._assignObjectId(t,r.attributes),r.attributes=t,r.uid!=null){const f=r.attributes[c];e.uidToObjectId[r.uid]=f}if(r.geometry!=null){const f=r.geometry.spatialReference??u;r.geometry=_(D(r.geometry,f),f,u)}h.push(r),a.push(T(r.attributes[c]))}}l.addMany(w([],h,n,d,o,y))}_applyUpdateEdits({updateResults:e},i){const{geometryType:a,hasM:n,hasZ:o,objectIdField:d,spatialReference:c,featureStore:u,fieldsIndex:l,featureIdInfo:y}=this._queryEngine;for(const m of i){const{attributes:h,geometry:r}=m,t=h?.[d];if(t==null){e.push(I(`Identifier field ${d} missing`));continue}if(!u.has(t)){e.push(I(`Feature with object id ${t} missing`));continue}const p=k(u.getFeature(t),a,o,n);if(r!=null){if(a!==F(r)){e.push(I("Incorrect geometry type."));continue}const f=r.spatialReference??c;p.geometry=_(D(r,f),f,c)}if(h){const f=j(l,p.attributes,h);if(f){e.push(f);continue}}u.add(B(p,a,o,n,y)),e.push(T(t))}}_assignObjectId(e,i,a=!1){const n=this._queryEngine.objectIdField;a&&i&&isFinite(i[n])?e[n]=i[n]:e[n]=this._nextObjectId++}}export{Qe as default};
