import{eg as c,L as x}from"./index-8ee34b61.js";import{f as g,l as y}from"./operatorBuffer-058c6c5b.js";import{getSpatialReference as f,fromGeometry as G,toGeometry as u,fromGeometries as N}from"./jsonConverter-13a35099.js";import"./SimpleGeometryCursor-e3941f41.js";import"./Point2D-e62ad2de.js";import"./ProjectionTransformation-16676837.js";import"./Envelope2D-4833fda6.js";import"./Transformation2D-ab2ac5ee.js";import"./OperatorDefinitions-181ceaf8.js";import"./GeometryCleaner-BEJM7I4l-aecaab94.js";import"./OperatorSimplifyOGC-95750b40.js";import"./OperatorGeneralize-e84d17ea.js";function V(o,e,a={}){const{unit:t}=a,m=f(o);t&&m&&(e=c(e,t,m));const i=G(o),r=i.getSpatialReference();return u(g(i.getGeometry(),r,e),r)}function $(o,e,a={}){let{maxDeviation:t=NaN,maxVerticesInFullCircle:m=96,union:i=!1,unit:r}=a;const n=f(o);r&&n&&(e=e.map(p=>c(p,r,n)),t&&(t=c(t,r,n)));const[l,s]=N(o);return y(l,s,e,t,m,i).map(p=>u(p,s)).filter(x)}export{V as execute,$ as executeMany};
