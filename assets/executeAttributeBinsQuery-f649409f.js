import{bA as f,H as c,V as y,dT as l,cC as p,as as S,g as R}from"./index-f00bd99f.js";import{R as g}from"./normalizeUtils-e6e5ded6.js";import{t as d}from"./query-451341fb.js";import{i as x}from"./AttributeBinsFeatureSet-d7280462.js";import J from"./AttributeBinsQuery-d72a6fe2.js";import"./normalizeUtilsCommon-3a54feae.js";import"./pbfQueryUtils-e0baedd7.js";import"./pbf-b0db6978.js";import"./memoryEstimations-368c31a0.js";import"./OptimizedFeature-a0a9dac6.js";import"./OptimizedFeatureSet-5dc8ee29.js";import"./FixedIntervalBinParameters-c92437fc.js";import"./json-48e3ea08.js";function N(n){const e=n.geometry,i=n.toJSON(),t=i;let a,r,o;if(e!=null&&(r=e.spatialReference,o=l(r),t.geometryType=p(e),t.geometry=JSON.stringify(e),t.inSR=o),i.outSR?(t.outSR=l(i.outSR),a=n.outSpatialReference):e&&(t.outSR=t.inSR,a=r),t.bin&&(t.bin=JSON.stringify(t.bin)),t.quantizationParameters&&(t.quantizationParameters=JSON.stringify(t.quantizationParameters)),t.outStatistics&&(t.outStatistics=JSON.stringify(t.outStatistics)),t.outTimeReference&&(t.outTimeReference=JSON.stringify(t.outTimeReference)),i.timeExtent){const u=i.timeExtent,{start:m,end:s}=u;m==null&&s==null||(t.time=m===s?m:`${m??"null"},${s??"null"}`),delete i.timeExtent}return n.defaultSpatialReference&&S(r,a)&&(t.defaultSR=t.inSR,delete t.inSR,delete t.outSR),t}async function O(n,e,i){return e.timeExtent!=null&&e.timeExtent.isEmpty?{data:{features:[]}}:await q(n,e,i)}async function q(n,e,i={}){const t=typeof n=="string"?f(n):n,a=e.geometry?[e.geometry]:[],r=await g(a,null,{signal:i.signal}),o=r?.[0];o!=null&&((e=e.clone()).geometry=o);const u=d({...t.query,f:"json",...N(e)});return c(y(t.path,"queryBins"),{...i,query:{...u,...i.query}})}async function C(n,e,i){const{data:t}=await O(R(n),J.from(e),i);return x.fromJSON(t)}export{C as executeAttributeBinsQuery};
