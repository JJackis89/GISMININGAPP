import{NonSimpleResult as D}from"./OperatorDefinitions-181ceaf8.js";import{execute as R}from"./affineTransformOperator-f46a2e75.js";import{_ as N,dU as y,L as _,eg as $}from"./index-8ee34b61.js";import{u as L,a as h,i as A,c as E,s as q}from"./operatorGeodesicBuffer-f970894a.js";import{e as M}from"./geodeticCurveType-07cde097.js";import{m as I}from"./geodeticAreaOperator-69b61a63.js";import{f as Yt}from"./geodeticAreaOperator-69b61a63.js";import{l as V}from"./geodeticDensifyOperator-d5988773.js";import{g as tr}from"./geodeticDensifyOperator-d5988773.js";import{m as B}from"./geodeticLengthOperator-b2662b11.js";import{f as or}from"./geodeticLengthOperator-b2662b11.js";import{isSimple as F}from"./simplifyOGCOperator-13986339.js";import H from"./Transformation-49ce719f.js";import{i as sr}from"./areaOperator-5e1fa101.js";import{x as U,f as Z,l as k}from"./operatorBuffer-058c6c5b.js";import{getSpatialReference as u,toPolygon as P,fromSpatialReference as a,fromGeometry as r,toGeometry as m}from"./apiConverter-660b6342.js";import{p as ur}from"./centroidOperator-af2e9a54.js";import{i as ir}from"./clipOperator-e84ff45e.js";import{u as mr}from"./containsOperator-1e2721c1.js";import{q as J,w as K,_ as Q,D as W}from"./operatorConvexHull-23ff06a5.js";import{t as X}from"./OperatorCrosses-7aef6bf6.js";import{i as lr}from"./cutOperator-04b825d3.js";import{l as yr}from"./densifyOperator-810ba2b3.js";import{m as xr}from"./differenceOperator-13c602ab.js";import{n as Y}from"./ProjectionTransformation-16676837.js";import{i as gr}from"./distanceOperator-9856a0cd.js";import{l as br}from"./equalsOperator-a06867ea.js";import{c as Sr}from"./generalizeOperator-b1eb92e5.js";import{s as ee,t as te,o as re,u as oe}from"./operatorIntersection-779036ea.js";import{p as Cr}from"./intersectsOperator-1f55f9d0.js";import{c as Pr}from"./labelPointOperator-b926ed40.js";import{n as wr}from"./lengthOperator-2b75ed17.js";import{D as ne,w as se,j as ae}from"./operatorOffset-d01b253e.js";import{t as ue}from"./OperatorOverlaps-ce50cec3.js";import{g as zr}from"./proximityOperator-2accb636.js";import{f as Rr}from"./relateOperator-a770120e.js";import{s as ce,e as ie,o as pe,u as me}from"./operatorSimplify-dd5586ad.js";import{i as Lr}from"./symmetricDifferenceOperator-9b96fca1.js";import{t as fe}from"./OperatorTouches-ba427c20.js";import{s as le,r as $e,e as ye}from"./operatorUnion-831ea196.js";import{t as _e}from"./OperatorWithin-22c482e3.js";import"./SimpleGeometryCursor-e3941f41.js";import"./Point2D-e62ad2de.js";import"./Envelope2D-4833fda6.js";import"./Transformation2D-ab2ac5ee.js";import"./jsonConverter-13a35099.js";import"./operatorGeodeticDensify-55f2183d.js";import"./OperatorSimplifyOGC-95750b40.js";import"./GeometryCleaner-BEJM7I4l-aecaab94.js";import"./OperatorGeneralize-e84d17ea.js";import"./Centroid-DZi-eb9F-33be666f.js";import"./OperatorIntersects-a0997a5a.js";import"./OperatorProximity-af7a7700.js";let x,d,g,v,T;function w(){return!!x&&q()}async function G(){if(!w()){const[e]=await Promise.all([N(()=>import("./apiConverter-660b6342.js"),["assets/apiConverter-660b6342.js","assets/Point2D-e62ad2de.js","assets/Envelope2D-4833fda6.js","assets/ProjectionTransformation-16676837.js","assets/Transformation2D-ab2ac5ee.js","assets/SimpleGeometryCursor-e3941f41.js","assets/index-8ee34b61.js","assets/index-a5714ce2.css","assets/OperatorDefinitions-181ceaf8.js","assets/jsonConverter-13a35099.js"]),L()]);x=e.fromGeometry,d=e.fromSpatialReference,g=e.getSpatialReference,v=e.toPolygon,T=h()}}function xe(e,t,o={}){let{curveType:s="geodesic",maxDeviation:n=NaN,unit:p}=o;p&&(t=y(t,p,"meters"),n&&(n=y(n,p,"meters")));const c=g(e);return v(A(x(e),d(c),M[s],t,n),c)}function de(e,t,o={}){let{curveType:s="geodesic",maxDeviation:n=NaN,union:p=!1,unit:c}=o;c&&(t=t.map(f=>y(f,c,"meters")),n&&(n=y(n,c,"meters")));const i=e.map(x),l=g(e);return E(i,d(l),M[s],t,n,p).map(f=>v(f,l)).filter(_)}const ht=Object.freeze(Object.defineProperty({__proto__:null,execute:xe,executeMany:de,isLoaded:w,load:G,get supportsCurves(){return T}},Symbol.toStringTag,{value:"Module"}));function ge(e,t,o={}){const{unit:s}=o,n=u(e);return s&&(t=$(t,s,n)),P(Z(r(e),a(n),t),n)}function ve(e,t,o={}){let{maxDeviation:s=NaN,maxVerticesInFullCircle:n=96,union:p=!1,unit:c}=o;const i=u(e);c&&(t=t.map(f=>$(f,c,i)),s&&(s=$(s,c,i)));const l=e.map(r);return k(l,a(i),t,s,n,p).map(f=>P(f,i)).filter(_)}const be=U(),At=Object.freeze(Object.defineProperty({__proto__:null,execute:ge,executeMany:ve,supportsCurves:be},Symbol.toStringTag,{value:"Module"}));function je(e){const t=u(e);return m(K(r(e)),t)}function Se(e,t={}){const{merge:o=!1}=t,s=e.map(r),n=u(e);return Q(s,o).map(p=>m(p,n))}function Oe(e){return W(r(e))}const Ce=J(),Et=Object.freeze(Object.defineProperty({__proto__:null,execute:je,executeMany:Se,isConvex:Oe,supportsCurves:Ce},Symbol.toStringTag,{value:"Module"})),b=new X;function Me(e){const t=u(e);return b.accelerateGeometry(r(e),a(t),1)}function Pe(e,t){return b.execute(r(e),r(t),a(e.spatialReference),null)}const Te=b.supportsCurves(),qt=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:Me,execute:Pe,supportsCurves:Te},Symbol.toStringTag,{value:"Module"})),j=new Y;function we(e){const t=u(e);return j.accelerateGeometry(r(e),a(t),1)}function Ge(e,t){return j.execute(r(e),r(t),a(e.spatialReference))}const ze=j.supportsCurves(),It=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:we,execute:Ge,supportsCurves:ze},Symbol.toStringTag,{value:"Module"}));function De(e){const t=u(e);return te(r(e),a(t))}function Re(e,t){const o=u(e);return m(re(r(e),r(t),a(o)),o)}function Ne(e,t){const o=e.map(r),s=u(e);return oe(o,r(t),a(s),7).map(n=>m(n,s)).filter(_)}const Le=ee(),Vt=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:De,execute:Re,executeMany:Ne,supportsCurves:Le},Symbol.toStringTag,{value:"Module"})),z={round:0,bevel:1,miter:2,square:3};function he(e,t,o={}){const{miterLimit:s=10,flattenError:n=0,joins:p="round",unit:c}=o,i=u(e);return c&&(t=$(t,c,i)),m(se(r(e),a(i),t,z[p],s,n),i)}function Ae(e,t,o={}){const{miterLimit:s=10,flattenError:n=0,joins:p="round",unit:c}=o,i=u(e);c&&(t=$(t,c,i));const l=e.map(r);return ae(l,a(i),t,z[p],s,n).map(f=>m(f,i)).filter(_)}const Ee=ne(),Bt=Object.freeze(Object.defineProperty({__proto__:null,execute:he,executeMany:Ae,supportsCurves:Ee},Symbol.toStringTag,{value:"Module"})),S=new ue;function qe(e){const t=u(e);return S.accelerateGeometry(r(e),a(t),1)}function Ie(e,t){return S.execute(r(e),r(t),a(e.spatialReference),null)}const Ve=S.supportsCurves(),Ft=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:qe,execute:Ie,supportsCurves:Ve},Symbol.toStringTag,{value:"Module"}));function Be(e){const t=u(e);return m(ie(r(e),a(t),!1),t)}function Fe(e){const t=e.map(r),o=u(e);return pe(t,a(o),!1).map(s=>m(s,o))}function He(e){return me(r(e),a(u(e)),!1)}const Ue=ce(),Ht=Object.freeze(Object.defineProperty({__proto__:null,execute:Be,executeMany:Fe,isSimple:He,supportsCurves:Ue},Symbol.toStringTag,{value:"Module"})),O=new fe;function Ze(e){const t=u(e);return O.accelerateGeometry(r(e),a(t),1)}function ke(e,t){return O.execute(r(e),r(t),a(e.spatialReference),null)}const Je=O.supportsCurves(),Ut=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:Ze,execute:ke,supportsCurves:Je},Symbol.toStringTag,{value:"Module"}));function Ke(e,t){const o=u(e);return m($e(r(e),r(t),a(o)),o)}function Qe(e){const t=e.map(r),o=u(e);return m(ye(t,a(o)),o)}const We=le(),Zt=Object.freeze(Object.defineProperty({__proto__:null,execute:Ke,executeMany:Qe,supportsCurves:We},Symbol.toStringTag,{value:"Module"})),C=new _e;function Xe(e){const t=u(e);return C.accelerateGeometry(r(e),a(t),1)}function Ye(e,t){return C.execute(r(e),r(t),a(e.spatialReference),null)}const et=C.supportsCurves(),kt=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:Xe,execute:Ye,supportsCurves:et},Symbol.toStringTag,{value:"Module"}));function Jt(e,t,o,s){const n=new H().rotate(t,o,s);return R(e,n)}const tt=new Set([5,6,7,10,11,12]);function Kt(e){const t=new D;return!F(e,t)&&tt.has(t.m_reason)}async function Qt(){await Promise.all([I(),G(),V(),B()])}export{sr as area,At as buffer,ur as centroid,ir as clip,mr as contains,Et as convexHull,qt as crosses,lr as cut,yr as densify,xr as difference,It as disjoint,gr as distance,br as equals,Sr as generalize,ht as geodesicBuffer,Yt as geodeticArea,tr as geodeticDensify,or as geodeticLength,Vt as intersection,Cr as intersects,Kt as isSelfIntersecting,Pr as labelPoint,wr as length,Qt as loadAll,Bt as offset,Ft as overlaps,zr as proximity,Rr as relate,Jt as rotate,Ht as simplify,Lr as symmetricDifference,Ut as touches,Zt as union,kt as within};
